######################################################
################## SITUATION DEBUG ###################
######################################################
window = {
	name = "window_situation_debug"
	widgetid = "window_situation_debug"
	datacontext = "[SituationWindow.GetSituation]"
	datacontext = "[GetVariableSystem]"
	datacontext = "[GetPlayer]"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	allow_outside = yes

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				vbox = { # participants
					name = "situation_participants"
					layoutpolicy_horizontal = expanding
					spacing = 6

					header_pattern = {
						layoutpolicy_horizontal = expanding

						blockoverride "header_text"
						{
							raw_text = "[Situation.GetNameNoTooltip] Debug"
						}

						blockoverride "button_close"
						{
							onclick = "[SituationWindow.Close]"
						}
					}
					vbox = {
						margin_top = -15
						spacing = 5

						text_single = {
#							text = "[Situation.GetPlayerInvolvementDesc]"
							max_width = 650
						}

						button_standard = {
							size = { 230 32 }
							minimumsize = { 200 0 }
							onclick = "[ToggleGameViewData('situation_participation', Situation.GetID)]"
							raw_text = "#D View Situation Participants"
						}
					}
				}

				vbox = {
					name = "current_situation"
					layoutpolicy_horizontal = expanding

					datacontext = "[SituationWindow.GetSituation]"

					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							max_width = 200
							min_width = 200
							raw_text = "#D Situation Start date:"
							using = Font_Size_Medium
						}
						text_single = {
							layoutpolicy_horizontal = expanding
							autoresize = no
							text = "[Situation.GetStartDate.GetStringLong]"
							using = Font_Size_Medium
							default_format = "#high"
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							max_width = 200
							min_width = 200
							raw_text = "#D Situation End date:"
							using = Font_Size_Medium
						}
						text_single = {
							layoutpolicy_horizontal = expanding
							autoresize = no
							visible = "[Situation.HasEndDate]"
							text = "[Situation.GetEndDate.GetStringLong]"
							using = Font_Size_Medium
							default_format = "#high"
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding

					datamodel = "[Situation.GetSubRegions]"

					text_single = {
						layoutpolicy_horizontal = expanding
						raw_text = "#D --- Sub Regions ---"
						using = Font_Size_Medium
						default_format = "#high"
					}

					item = {
						vbox = {
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									max_width = 200
									min_width = 200
									raw_text = "#D Sub Region:"
									using = Font_Size_Medium
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									autoresize = no
									text = "[SituationSubRegion.GetName]"
									using = Font_Size_Medium
									default_format = "#high"
								}

								button_standard = {
									size = { 60 32 }
									minimumsize = { 60 0 }
									onclick = "[SituationWindow.SetSelectedSubRegion( SituationSubRegion.Self )]"
									raw_text = "#D Select"
								}
							}
							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									max_width = 200
									min_width = 200
									margin_left = 30
									raw_text = "#D Current phase:"
									using = Font_Size_Medium
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									autoresize = no
									text = "[SituationSubRegion.GetCurrentPhase.GetName]"
									using = Font_Size_Medium
									default_format = "#high"
								}
							}
							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									max_width = 200
									min_width = 200
									margin_left = 30
									raw_text = "#D Your group:"
									using = Font_Size_Medium
								}

								text_single = {
									visible = "[SituationSubRegion.GetCharacterParticipantGroup( GetPlayer ).IsValid]"
									layoutpolicy_horizontal = expanding
									text = "[SituationSubRegion.GetCharacterParticipantGroup( GetPlayer ).GetName]"
									using = Font_Size_Medium
									default_format = "#high"
								}
								text_single = {
									visible = "[Not( SituationSubRegion.GetCharacterParticipantGroup( GetPlayer ).IsValid )]"
									layoutpolicy_horizontal = expanding
									raw_text = "- none -"
									using = Font_Size_Medium
									default_format = "#debug"
								}
							}
						}
					}
				}


				vbox = {
					name = "current_sub_region"
					margin_top = 18

					layoutpolicy_horizontal = expanding

					datacontext = "[SituationWindow.GetSelectedSubRegion]"

					visible = "[SituationSubRegion.IsValid]"

					text_single = {
						layoutpolicy_horizontal = expanding
						autoresize = no
						raw_text = "#D --- Selected Sub Region ([SituationSubRegion.GetName]) ---"
						using = Font_Size_Medium
					}

					vbox = {
						name = "current_phase_widget"
						datacontext = "[SituationSubRegion.GetCurrentPhase]"
						datacontext = "[GetPlayer]"
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 200
								min_width = 200
								raw_text = "#D ------ Current phase ------"
								using = Font_Size_Medium
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								autoresize = no
								text = "[SituationPhase.GetName]"
								using = Font_Size_Medium
								default_format = "#high"
							}
						}

						hbox = {
                        	layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 200
								min_width = 200
	                        	margin_left = 30
								raw_text = "#D Start date:"
								using = Font_Size_Medium
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								autoresize = no
								text = "[SituationPhase.GetStartDate.GetStringLong]"
								using = Font_Size_Medium
								default_format = "#high"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 200
								min_width = 200
	                        	margin_left = 30
								raw_text = "#D End date:"
								using = Font_Size_Medium
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								autoresize = no
								text = "[SituationPhase.GetEndDate.GetStringLong]"
								using = Font_Size_Medium
								default_format = "#high"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 200
								min_width = 200
	                        	margin_left = 30
								raw_text = "#D Leading Next Phase:"
								using = Font_Size_Medium
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								autoresize = no
								text = "[SituationPhase.GetLeadingPhaseType.GetName]"
								using = Font_Size_Medium
								default_format = "#high"
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 200
								min_width = 200
	                        	margin_left = 30
								raw_text = "#D Modifier Sets:"
								using = Font_Size_Medium
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[SituationPhase.GetType.GetModifierNamedSets]"

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											layoutpolicy_horizontal = expanding
											autoresize = no
											text = "[SituationModifierNamedSet.GetKey]"
											using = Font_Size_Medium
											default_format = "#high"
										}
									}
								}
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 20

							hbox = {
								layoutpolicy_horizontal = expanding

								text_single = {
									layoutpolicy_horizontal = expanding
									raw_text = "#D ----- Future Phases ----- "
									using = Font_Size_Medium
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								datamodel = "[SituationPhase.GetFuturePhases]"

								item = {
									vbox = {
										margin_top = 20
										layoutpolicy_horizontal = expanding

										hbox = {
											layoutpolicy_horizontal = expanding

											text_single = {
												layoutpolicy_horizontal = expanding
												max_width = 200
												min_width = 200
												raw_text = "#D Future phase:"
												using = Font_Size_Medium
											}

#											icon = {
#												size = { 54 54 }
#												texture = "[FutureSituationPhase.GetType.GetIcon]"
#
#												background = {
#													using = Background_Area_Solid
#												}
#											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[FutureSituationPhase.GetType.GetNameNoTooltip]"
												using = Font_Size_Medium
												default_format = "#high"
												max_width = 230
											}

											text_single = {
												layoutpolicy_horizontal = preferred
												visible = "[FutureSituationPhase.HasPointsTakeoverType]"

												raw_text = "Points: [FutureSituationPhase.GetProgress] / [FutureSituationPhase.GetTakeoverPoints]"
												using = Font_Size_Medium
												default_format = "#high"
											}

											text_single = {
												layoutpolicy_horizontal = preferred
												visible = "[FutureSituationPhase.HasDurationTakeoverType]"

												raw_text = "[FutureSituationPhase.GetProgress] / [FutureSituationPhase.GetTakeoverDurationDays] Days"
												using = Font_Size_Medium
												default_format = "#high"
											}

											button_standard = {
												size = { 60 32 }
												minimumsize = { 60 0 }
												onclick = "[SituationWindow.SetSelectedFuturePhaseType( FutureSituationPhase.GetType.Self )]"
												raw_text = "#D Select"
											}
										}
									}
								}
							}
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_top = 10

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_top = 10

						datacontext = "[SituationWindow.GetSelectedFuturePhaseType]"

						vbox = { # catalyst info
							name = "catalyst_information_area"

							background = {
								using = Background_Area_Dark
								alpha = 0.5
							}

							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin_left = 5

							text_label_center = {
								raw_text = "#D Catalysts towards [SituationPhaseType.GetNameNoTooltip]#!"
								max_width = 560
								fontsize = 18
							}


							spacer = {
								size = { 0 15 }
							}

							scrollbox = {
								size = { 0 270 }
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding

								blockoverride "scrollbox_background" {}
								blockoverride "scrollbox_background_fade" {}
								blockoverride "scrollbox_margins" {}

								blockoverride "scrollbox_content"
								{
									vbox = {
										name = "catalyst_entries"
										datamodel = "[SituationWindow.GetCatalystsForSelectedPhase]"

										datacontext = "[SituationWindow.GetSelectedSubRegion.GetCurrentPhase]"

										layoutpolicy_vertical = expanding
										layoutpolicy_horizontal = expanding

										margin_left = 10
										margin_right = 15
										maximumsize = { 1000 50 }


										item = {
											hbox = {
												layoutpolicy_vertical = expanding
												layoutpolicy_horizontal = expanding

												widget = {
													size = { 60 55}

													background = {
														using = Background_Area_Dark
														using = Color_Green
														alpha = 0.1
														margin_left = 4
														margin_right = 6

													}

													background = {
														using = Background_Frame
														using = Color_Green
														alpha = 0.3
														margin_left = 4
														margin_right = 6

													}

													hbox = {
														layoutpolicy_horizontal = expanding
														icon = {
															size = { 25 25 }
#															texture = "[SituationWindow.GetSelectedPhase.GetIcon]"
														}
														text_single = {
															text = "[SituationCatalystEntry.GetPoints|+=]"
															align = nobaseline
														}
													}
												}

												text_multi = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													text = "[SituationCatalystEntry.GetCatalystDescription]"
													autoresize = no
													align = left|nobaseline
													max_width = 520
													margin = { 10 5 }
												}

												background = {
													using = Background_Area_Dark
												}

												widget = {
													size = { 50 60 }

													background = {
														visible = "[GreaterThan_int32( SituationPhase.GetNumCompletionsOfCatalystForPhase( SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst ), '(int32)0' )]"
														using = Background_Frame
														color = { 0.4 0.603 0.298 1 }
														alpha = 0.6
													}

													background = {
														visible = "[GreaterThan_int32( SituationPhase.GetNumCompletionsOfCatalystForPhase( SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst ), '(int32)0' )]"
														using = Background_Area
														color = { 0.4 0.603 0.298 1 }
														alpha = 0.1
													}

													background = {
														visible = "[EqualTo_int32( SituationPhase.GetNumCompletionsOfCatalystForPhase( SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst ), '(int32)0' )]"
														using = Background_Frame
														using = Color_Grey
														alpha = 0.4
													}

													background = {
														visible = "[EqualTo_int32( SituationPhase.GetNumCompletionsOfCatalystForPhase( SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst ), '(int32)0' )]"
														using = Background_Area
														using = Color_Grey
														alpha = 0.1
													}

													text_single = {
														parentanchor = center
														align = nobaseline
														raw_text = "[Select_CString(GreaterThan_int32( SituationPhase.GetNumCompletionsOfCatalystForPhase( SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst ), '(int32)0'), '#COLOR_GREEN ', '#COLOR_GRAY ')]x[SituationPhase.GetNumCompletionsOfCatalystForPhase(SituationWindow.GetSelectedFuturePhaseType, SituationCatalystEntry.GetCatalyst)]#!"
													}
												}
											}
										}
									}
								}
							}
							expand = {
								layoutpolicy_vertical = expanding
							}
						}
					}
				}
				expand = {}
			}
		}
	}
}

types Situation
{
#	type situation_next_phase_banner = container {
#		button = {
#			size = { 148 160 }
#			position = { 0 26 }
#
#			onclick = "[SituationWindow.SetSelectedPhase(SituationPhase.Self)]"
#			onclick = "[PdxGuiTriggerAllAnimations('catalyst_refresh')]"
#
#			enabled = "[Or( Not( Situation.IsInTransitionPhase ), ObjectsEqual( SituationPhase.Self, Situation.GetNextPhase ) )]"
#
#			tooltipwidget = {
#				situation_phase_tooltip = {}
#			}
#
#			widget = {
#				visible = "[Not( VariableSystem.Exists('showing_ending_decisions') )]"
#				size = { 46 60 }
#				position = { 0 -27 }
#				parentanchor = hcenter|top
#
#				background = {
#					using = Background_Area_Dark
#				}
#			}
#
#			background = {
#				visible = "[ObjectsEqual(SituationWindow.GetSelectedPhase, SituationPhase.Self)]"
#				using = Background_Area_Dark
#				alpha = 0.6
#
#				modify_texture = {
#					texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
#					blend_mode = alphamultiply
#					alpha = 1
#				}
#			}
#		}
#	}
}
