types CourtPositionTypes
{
	type court_position_task_icon_tooltip_widget = widget
	{
		alwaystransparent = no
		using = GeneralTooltipSetup

		widget = {
			name = "background"
			alwaystransparent = no
			size = { 100% 100% }
			using = DefaultTooltipBackground
		}

		vbox = {
			set_parent_size_to_minimum = yes
			minimumsize = { 280 0 }
			maximumsize = { 400 0 }

			margin_top = 5
			margin_bottom = 20

			hbox = {
				layoutpolicy_horizontal = expanding
				
				margin = { 15 10 }
				spacing = 10

				background = {
					using = Background_Header_Tall
					margin_bottom = 10
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					vbox = {
						name = "FancyHeader"
						layoutpolicy_horizontal = expanding
						alwaystransparent = no
						
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10
							
							icon = {
								name = "tooltip_icon"
								size = { 60 60 }
								texture = "[CourtPositionTaskType.GetIcon]"
							}
							
							text_multi = {
								name = "task_info"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								
								margin = { 0 5 }
								
								text = "COURT_POSITION_TASK_HEADER"
								autoresize = yes
								align = left|nobaseline
								fontsize_min = 14
								max_width = 380
								using = Font_Size_Medium
							}
						}
					}
				}

				expand = {}
			}

			### TOOLTIP FILLED/EMPLOYED
			vbox = {
				visible = "[CourtPosition.IsValid]"
				layoutpolicy_horizontal = expanding

				margin = { 20 0 }
				spacing = 5

				text_multi = {
					text = "[GetCommandDesc( CourtPosition.ToggleTaskCmd(  CourtPositionTaskType.Self ) )]"
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[CourtPositionTaskType.HasEmployerCourtModifiers]"

					text = COURT_POSITION_TASK_EMPLOYER_COURT_EFFECTS
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetEmployerModifierDescription( CourtPosition.Self ) ) )]"
					text = COURT_POSITION_TASK_EMPLOYER_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[CourtPositionTaskType.HasEmployerCourtModifiers]"
					using = court_position_tooltip_text_format

					text = COURT_POSITION_TASK_EMPLOYER_COURT_EFFECTS
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetOnStartEffectDesc( CourtPosition.Self ) ) )]"
					text = COURT_POSITION_TASK_START_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetEmployeeModifierDescription ) )]"
					text = COURT_POSITION_TASK_EMPLOYEE_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetOnEndEffectDesc( CourtPosition.Self )  ) )]"
					text = COURT_POSITION_TASK_END_EFFECTS
					
					using = court_position_tooltip_text_format	
				}

				text_multi = {
					text = COURT_POSITION_TASK_COST
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					text = "[CourtPositionTaskType.GetDescription]"
					default_format = "#F"
					
					using = court_position_tooltip_text_format
				}

				block "click_to_activate"
				{
					text_multi = {
						visible = "[IsValidCommand( CourtPosition.ToggleTaskCmd( CourtPositionTaskType.Self ) )]"
						
						text = "COURT_POSITION_TASK_CLICK_TT"
						default_format = "#I"
						
						using = court_position_tooltip_text_format
					}
				}
			}

			### TOOLTIP EMPTY/UNEMPLOYED
			vbox = {
				visible = "[Not( CourtPosition.IsValid )]"
				layoutpolicy_horizontal = expanding
				
				margin = { 20 0 }
				spacing = 5

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetEmployerModifierGenericDescription ) )]"
					text = COURT_POSITION_TASK_EMPLOYER_GENERIC_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[CourtPositionTaskType.HasEmployerCourtModifiers]"
					text = COURT_POSITION_TASK_EMPLOYER_COURT_GENERIC_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetOnStartEffectGenericDesc() ) )]"
					text = COURT_POSITION_TASK_START_GENERIC_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					block "employee_modifier_description" {
						visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetEmployeeModifierDescription ) )]"
						text = COURT_POSITION_TASK_EMPLOYEE_EFFECTS
					}

					using = court_position_tooltip_text_format
				}

				text_multi = {
					visible = "[Not( StringIsEmpty( CourtPositionTaskType.GetOnEndEffectGenericDesc() ) )]"
					text = COURT_POSITION_TASK_END_GENERIC_EFFECTS
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					text = COURT_POSITION_TASK_GENERIC_COST
					
					using = court_position_tooltip_text_format
				}

				text_multi = {
					text = "[CourtPositionTaskType.GetDescription]"
					default_format = "#F"
					
					using = court_position_tooltip_text_format
				}
			}
		}
	}

	type widget_court_position_task_view = widget {
		### VIEW - TASK OUTER CIRCLE ###
		icon = {
			size = { 40 40 }
			parentanchor = center

			enabled = "[IsValidCommand( CourtPosition.ToggleTaskCmd( CourtPositionTaskType.Self ) )]"

			texture = "gfx/interface/buttons/button_round_frame.dds"

			background = {
				texture = "gfx/interface/buttons/button_round_bg.dds"
				using = Color_Button_Background

				modify_texture = {
					texture = "gfx/interface/component_overlay/overlay_texture.dds"
					blend_mode = overlay
				}
			}

			modify_texture = {
				texture = "gfx/interface/colors/colors_textured.dds"
				blend_mode = add
				framesize = { 96 96 }
				spritetype = corneredtiled
				frame = 1
			}

			### VIEW - TASK INNER ICON ###
			icon = {
				size = { 84% 84% }
				parentanchor = center

				texture = "[CourtPositionTaskType.GetIcon]"
			}

			tooltipwidget = {
				court_position_task_icon_tooltip_widget = {}
			}
			using = tooltip_sw
		}
	}

	type widget_court_position_task = widget {
		### ACTIVE TASK GLOW ###
		icon = {
			visible = "[CourtPosition.IsActiveTask( CourtPositionTaskType.Self )]"
			size = { 48 48 }
			parentanchor = center

			texture = "gfx/particles/halo.dds"
			color = { 1 0.85 0.6 1 }
		}

		### TASK OUTER CIRCLE ###
		button_round = {
			size = { 40 40 }
			parentanchor = center

			upframe = 1
			downframe = 1
			uphoverframe = 2
			disableframe = 6
			gfxtype = togglepushbuttongfx
			effectname = "NoHighlight"

			enabled = "[IsValidCommand( CourtPosition.ToggleTaskCmd( CourtPositionTaskType.Self ) )]"

			using = tooltip_sw

			tooltipwidget = {
				court_position_task_icon_tooltip_widget = {}
			}

			### TASK INNER ICON ###
			button_normal = {
				size = { 84% 84% }
				parentanchor = center

				texture = "[CourtPositionTaskType.GetIcon]"

				effectname = "NoHighlight"
				gfxtype = togglepushbuttongfx
				shaderfile = "gfx/FX/pdxgui_pushbutton.shader"

				block "on_click"
				{
				}
				onclick = "[PostCommand( CourtPosition.ToggleTaskCmd( CourtPositionTaskType.Self ) )]"
			}
		}
	}

	type vbox_court_position_aptitude = vbox {
		minimumsize = { 80 0 }
		margin_left = 2
		margin_right = 8
		margin_bottom = 4
		margin_top = 2

		background = {
			using = Background_Area_Dark
			alpha = 0.5
			modify_texture = {
				name = "mask"
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
				spriteType = Corneredstretched
				spriteborder = { -20 0 }
				blend_mode = alphamultiply
				mirror = horizontal
			}
		}

		text_single = {
			max_width = 100

			text = "[CourtPosition.GetAptitudeText|V]"
			align = nobaseline

			tooltipwidget = {
				court_position_aptitude_breakdown_tooltip = {
					datacontext = "[CourtPosition.GetAptitudeTooltip]"

					blockoverride "header_text" {
						text = "COURT_POSITION_aptitude_description_position"
					}

					blockoverride "modifier_list" {
						text = "[CourtPosition.GetEmployerBonuses]"
					}
				}
			}
		}

		text_single = {
			max_width = 100

			text = "COURT_POSITIONS_WINDOW_SALARY_SHORT"
			align = nobaseline
			tooltip = "[CourtPosition.GetSalaryBreakdownTooltip]"
		}
	}

	type widget_court_position_item = widget {
		datacontext = "[CourtPositionItem.GetType]"
		datacontext = "[CourtPositionItem.GetCourtOwner]"

		scissor = yes

		state = {
			name = _mouse_hierarchy_enter
			on_start = "[GetVariableSystem.Toggle( CourtPositionItem.GetItemId )]"
			on_finish = "[GetVariableSystem.Toggle( CourtPositionItem.GetItemId )]"
		}

		state = {
			name = _mouse_hierarchy_leave
			on_finish = "[GetVariableSystem.Clear( CourtPositionItem.GetItemId )]"
		}

		proportional_icon = {
			size = { 99% 99% }
			parentanchor = center
			using = Mask_Rough_Edges
			texture = "[CourtPositionItem.GetBackground]"
			alpha = "[CourtPositionsWindow.GetCardBackgroundAlpha]"
		}
		proportional_icon = {
			size = { 99% 99% }
			parentanchor = center
			using = Mask_Rough_Edges
			texture = "[CourtPositionItem.GetBackground]"
			alpha = 0.15
			enabled = no
		}

		### ITEM CONTENTS ###
		vbox = {
			datacontext = "[CourtPositionItem.GetPosition]"
			margin = { 3 0 }
			margin_top = 1
			margin_bottom = 4
			layoutpolicy_vertical = expanding

			### EMPLOYEE PORTRAIT ###
			widget = {
				datacontext = "[CourtPosition.GetEmployee]"
				widgetanchor = top
				layoutpolicy_vertical = expanding

				allow_outside = yes
				scissor = yes

				widget = {
					visible = "[Character.IsValid]"
					position = { -52 46 }
					size = { 190 155 }

					using = Portrait_Background_Glows
				}

				### POSITION HIRED ###
				portrait_button = {
					visible = "[Character.IsValid]"
					position = { -40 28 }
					size = { 180 195 }

					allow_outside = yes
					using = portrait_base

					portrait_texture = "[CourtPositionItem.GetPortraitAnimation( 'environment_council', 'camera_council', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
					mask = "gfx/portraits/portrait_mask_council.dds"
					effectname = "NoHighlight"

					### FIRE/REPLACE BUTTONS ###
					widget = {
						visible = "[GetVariableSystem.Exists( CourtPositionItem.GetItemId )]"
						visible_at_creation = no
						position = { -12 0 }

						allow_outside = yes

						state = {
							name = _show
							using = Animation_FadeIn_Standard
						}

						state = {
							name = _hide
							using = Animation_FadeOut_Standard
						}

						button_round = {
							name = "fire_courtier"
							size = { 30 30 }
							position = { 58 28 }

							button_cancel = {
								size = { 24 24 }
								parentanchor = center

								onclick = "[CourtPosition.OpenRevokeConfirmation]"
								tooltip = "COURT_POSITION_REVOKE"
								using = tooltip_ne
							}
						}

						button_round = {
							name = "replace_courtier"
							size = { 30 30 }
							position = { 58 62 }

							button_change = {
								size = { 24 24 }
								parentanchor = center

								onclick = "[CourtPosition.OpenReplaceWindow]"
								tooltip = "COURT_POSITION_REPLACE"
								using = tooltip_ne
							}
						}

						button_round = {
							name = "automate_position"
							size = { 30 30 }
							position = { 58 96 }

							button_edit_automation = {
								size = { 24 24 }
								parentanchor = center

								enabled = "[IsValidCommand( CourtPositionType.ToggleAutomationCmd )]"
								onclick = "[PostCommand( CourtPositionType.ToggleAutomationCmd )]"

								tooltip = "COURT_POSITION_TOGGLE_AUTOMATION"
								using = tooltip_se
							}
						}
					}

					### FILLED - DEBUG AI SCORE ###
					text_label_center = {
						name = "ai_score"
						datacontext = "[CourtPosition.GetEmployee]"
						visible = "[AIWatchWindowsEnabled]"
						position = { 34 34 }
						parentanchor = center

						text = "[CourtPosition.GetAICandidateScore]"
						default_format = "#D"
						align = nobaseline
					}
				}

				### VACANT/EMPTY POSITION ###
				portrait_button = {
					visible = "[Not( Character.IsValid )]"
					enabled = "[And( CourtPositionItem.IsAllowed, CourtPositionItem.IsEnabled )]"
					position = { -4 20 }
					size = { 180 190 }

					allow_outside = yes
					using = portrait_base

					portrait_texture = "[Character.GetAnimatedPortrait('environment_council', 'camera_council', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
					mask = "gfx/portraits/portrait_mask_council.dds"
					effectname = "NoHighlight"
				}

				### VACANT/EMPTY POSITION - HIRE BUTTON ###
				button = {
					visible = "[Not( Character.IsValid )]"
					enabled = "[And( CourtPositionItem.IsAllowed, CourtPositionItem.IsEnabled )]"
					position = { 3 -20 }
					size = { 168 220 }

					allow_outside = yes
					gfxtype = framedbuttongfx
					effectname = "NoHighlight"

					texture = "gfx/portraits/unknown_portraits/button_unknown_small.dds"
					framesize = { 564 780 }
					upframe = 1
					overframe = 2

					### EMPTY - DEBUG AI SCORE ###
					text_label_center = {
						name = "ai_score"
						datacontext = "[CourtPositionItem.GetCourtOwner]"
						visible = "[AIWatchWindowsEnabled]"
						position = { 0 10 }
						parentanchor = center

						text = "[CourtPositionType.GetHighestAiHireScore( Character.Self )]"
						default_format = "#D"
						align = nobaseline
					}

					button_icon = {
						parentanchor = center
						size = { 40 40 }
						position = { 0 65 }

						alwaystransparent = yes
						texture = "gfx/interface/icons/flat_icons/plus.dds"
					}

					onclick = "[CourtPositionType.OpenAppointWindow( CourtPositionsWindow.CourtOwner.Self )]"
					tooltip = "[CourtPositionItem.GetRequirementsTooltip]"
				}

				### CONTENT NEEDS TO BE BELOW PORTRAITS ###
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					### HEADER | ICON, POSITION & CHARACTER NAME ###
					hbox = {
						layoutpolicy_horizontal = expanding
						margin = { 0 4 }
						minimumsize = { -1 50 }

						background = {
							using = Background_Area_Characterlist
						}
						background = {
							using = GenericObjectCardHeaderBackground
							using = court_position_header_background_colors
						}

						tooltipwidget = {
							court_position_type_tooltip = {
								blockoverride "title_text_inner" {
									datacontext = "[GetPlayer]"
									text = "[Select_CString( CourtPosition.IsValid, CourtPosition.GetNameNoTooltip, CourtPositionType.CalcTriggeredNameNoTooltip( Character.Self ) )]"
								}
								blockoverride "description_text_inner" {
									datacontext = "[GetPlayer]"
									text = "[Select_CString( CourtPosition.IsValid, CourtPosition.GetDescription, CourtPositionType.CalcTriggeredDescription( Character.Self ) )]"
								}
							}
						}
						using = tooltip_ws

						#### ICON ####
						vbox = {
							margin = { 5 0 }
							layoutpolicy_vertical = expanding

							icon = {
								texture = "[CourtPositionType.GetIcon]"
								size = { 32 32 }

								#### AUTOMATION ICON ####
								widget = {
									position = { 0 0 }
									visible = "[Not( CourtPositionType.HasAutomationNone( GetPlayer ) )]"

									allow_outside = yes

									button_round = {
										parentanchor = top|left
										onclick = "[PostCommand( CourtPositionType.DisableAutomationCmd )]"

										size = { 20 20 }
										position = { 16 16 }

										tooltip = "COURT_POSITION_AUTOMATION_DISABLE_TOOLTIP"

										icon_flat_standard_gold = {
											size = { 16 16 }
											texture = "gfx/interface/colors/black.dds"
											parentanchor = center

											alpha = 0.8

											modify_texture = {
												name = "spin"
												blend_mode = alphaMultiply
												texture = "gfx/interface/icons/flat_icons/army_automation.dds"
												rotate_uv = 0
											}

											state = {
												name = a
												next = b
												trigger_on_create = yes
												duration = 10

												modify_texture = {
													name = "spin"
													rotate_uv = -360
												}
											}

											state = {
												name = b
												next = a
												trigger_on_create = yes
												duration = 0

												modify_texture = {
													name = "spin"
													rotate_uv = 0
												}
											}
										}
									}
								}
							}
						}

						vbox = {
							max_width = 40

							### POSITION NAME ###
							text_single = {
								layoutpolicy_horizontal = expanding
								max_width = 126

								text = "[CourtPositionItem.GetNameNoTooltip]"
								default_format = "#high"
								align = nobaseline
							}

							### EMPLOYEE NAME ###
							hbox = {
								visible = "[CourtPositionItem.IsEmployed]"
								layoutpolicy_horizontal = expanding

								text_single = {
									datacontext = "[CourtPosition.GetEmployee]"
									layoutpolicy_horizontal = expanding
									max_width = 126

									text = "[Character.GetShortUINameNoTooltipNoFormat]"
									default_format = "#medium"
									align = nobaseline
								}
							}
						}
						expand = {}
					}

					#### APTITUDE & SALARY ####
					hbox = {
						margin_right = 7
						margin_top = 5
						layoutpolicy_horizontal = expanding

						expand = {}

						vbox_court_position_aptitude = {
							visible = "[Character.IsValid]"
						}
					}

					expand = {}

					#### TASK BUTTONS ####
					vbox = {
						layoutpolicy_horizontal = expanding
						hbox = {
							visible = "[GreaterThan_int32( GetDataModelSize( CourtPositionItem.GetTasks ), '(int32)3')]"
							layoutpolicy_horizontal = expanding

							### OPINION OF LIEGE ###
							hbox = {
								visible = "[And(Character.IsValid, Not(Character.ShouldShowDreadEffectIcon))]"
								margin_left = 15

								portrait_opinion_small = {}
							}
							hbox = {
								visible = "[And(Character.IsValid, Character.ShouldShowDreadEffectIcon)]"
								margin_left = 3

								portrait_opinion_small = {}
							}
							### POWERFUL AGENT WARNING ###
							hbox = {
								visible = "[And( Not( Character.IsValid ), CourtPositionType.IsPowerfulAgent )]"
								margin_left = 10
								margin_bottom = "[Select_int32( IsDataModelEmpty( CourtPositionItem.GetTasks ), '(int32)5', '(int32)0' )]"

								icon = {
									name = "powerful_agent_warning"
									size = { 30 30 }

									texture = "gfx/interface/icons/symbols/icon_alert.dds"
									tooltip = "COURT_POSITION_POWERFUL_AGENT"
									using = tooltip_ne
								}
								expand = {}
							}
							expand = {}
						}
						hbox = {
							# OFFSET FROM BOTTOM
							margin_bottom = 3
							layoutpolicy_horizontal = expanding

							# TASK BUTTON CONTENT
							hbox = {
								margin_top = 5
								margin_right = 10
								margin_bottom = 3
								layoutpolicy_horizontal = expanding

								background = {
									visible = "[Not( IsDataModelEmpty( CourtPositionItem.GetTasks ) )]"
									using = Background_Area_Dark
									alpha = 0.7
								}

								hbox = {
									#layoutpolicy_horizontal = expanding
									visible = "[Not( GreaterThan_int32( GetDataModelSize( CourtPositionItem.GetTasks ), '(int32)3') )]"

									### OPINION OF LIEGE ###
									hbox = {
										visible = "[And(Character.IsValid, Not(Character.ShouldShowDreadEffectIcon))]"
										margin_left = 15
										layoutpolicy_horizontal = expanding

										portrait_opinion_small = {}
									}
									hbox = {
										visible = "[And(Character.IsValid, Character.ShouldShowDreadEffectIcon)]"
										margin_left = 3
										layoutpolicy_horizontal = expanding

										portrait_opinion_small = {}
									}

									### POWERFUL AGENT WARNING ###
									hbox = {
										visible = "[And( Not( Character.IsValid ), CourtPositionType.IsPowerfulAgent )]"
										margin_left = 10
										margin_bottom = "[Select_int32( IsDataModelEmpty( CourtPositionItem.GetTasks ), '(int32)5', '(int32)0' )]"

										icon = {
											name = "powerful_agent_warning"
											size = { 30 30 }

											texture = "gfx/interface/icons/symbols/icon_alert.dds"
											tooltip = "COURT_POSITION_POWERFUL_AGENT"
											using = tooltip_ne
										}
										expand = {}
									}
									expand = {}
								}

								expand = {}

								fixedgridbox = {
									name = "task_items"

									addcolumn = 38
									addrow = 38
									setitemsizefromcell = yes
									datamodel_wrap = 4
									flipdirection = yes
									layoutanchor = bottomleft

									datamodel = "[CourtPositionItem.GetTasks]"
									item = {
										widget_court_position_task = {
											visible = "[CourtPositionTaskItem.IsShown]"
											datacontext = "[CourtPositionTaskItem.GetTask]"
											datacontext = "[CourtPositionTaskItem.GetCourtPosition]"
										}
									}
								}
							}
						}
					}
				}
			}
		}

		### CARD FRAME ###
		widget = {
			size = { 100% 97% }

			background = {
				using = Background_Frame
				margin_top = 2
				margin_bottom = 2
				margin_right = -3
			}
		}
	}

	type vbox_court_positions = vbox {
		layoutpolicy_horizontal = expanding

		spacing = 5

		### Header - Decision Button and Monthly Salaries ###
		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 15 15 }
			margin_bottom = 10
			spacing = 10

			expand = {}

			### Monthly Salaries
			vbox = {
				name = "salaries_tutorial_uses_this"
				datacontext = "[CourtPositionsWindow.CourtPositionsExpenseBreakdown]"
				visible = "[CourtPositionsWindow.HasEmployedPositions]"
				minimumsize = { 200 0 }
				layoutpolicy_vertical = expanding

				tooltipwidget = {
					widget_value_breakdown_tooltip = {}
				}

				vbox = {
					layoutpolicy_horizontal = expanding

					text_label_center = {
						max_width = 250

						text = "COURT_POSITIONS_WINDOW_MONTHLY_SALARY"
					}

					text_single = {
						max_width = 250

						text = "[CourtPositionsWindow.TotalPaidSalaries]"
						default_format = "#high"
						align = nobaseline
					}
				}
			}

			### Recruit Decision Button
			button_decision_entry = {
				name = "recruit_position_decision"
				datacontext = "[GetDecisionWithKey('recruit_court_position_decision')]"
				visible = "[Decision.IsShownForPlayer]"
				size = { 300 45 }
				using = tooltip_se

				onclick = "[OpenGameViewData( 'decision_detail', Decision.Self)]"
			}

			expand = {}
		}

		### Monthly Income from held positions
		hbox = {
			visible = "[Not( IsDataModelEmpty( CourtPositionsWindow.GetHeldPositions ) )]"
			layoutpolicy_horizontal = expanding

			hbox = {
				margin = { 10 10 }
				minimumsize = { 532 0 }
				maximumsize = { 532 0 }

				background = {
					using = Background_Area_Dark
				}

				hbox = {
					datamodel = "[CourtPositionsWindow.GetHeldPositions]"

					text_single = {
						max_width = 210

						text = "COURT_POSITIONS_WINDOW_YOUR_POSITIONS"
						align = nobaseline
						margin_right = 6
					}

					item = {
						icon = {
							datacontext = "[CourtPosition.GetPositionType]"
							texture = "[CourtPositionType.GetIcon]"
							size = { 32 32 }

							tooltipwidget = {
								using = court_position_tooltip
							}
						}
					}
				}
				expand = {}

				hbox = {
					margin_left = 10

					text_single = {
						max_width = 210

						text = "COURT_POSITIONS_WINDOW_MONTHLY_SALARY_YOUR"
						align = nobaseline
					}

					text_single = {
						datacontext = "[CourtPositionsWindow.CourtPositionsIncomeBreakdown]"
						visible = "[CourtPositionsWindow.CourtOwner.HoldsCourtPosition]"
						margin_left = 10
						max_width = 200

						text = "[CourtPositionsWindow.TotalEarnedSalaries]"
						default_format = "#high"
						align = nobaseline

						tooltipwidget = {
							widget_value_breakdown_tooltip = {}
						}
					}
				}
			}
			expand = {}
		}

		### Court Position Group Foldouts ###
		scrollbox = {
			using = Animation_Tab_Switch

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_margins"
			{
				margin = { 6 10 }
				margin_right = 20
			}

			blockoverride "scrollbox_content"
			{
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				### Available Court Positions ###
				fixedgridbox = {
					name = "court_position_items"
					layoutpolicy_horizontal = expanding

					addcolumn = 180
					addrow = 228
					setitemsizefromcell = yes
					datamodel_wrap = 3
					flipdirection = yes

					datamodel = "[CourtPositionsWindow.GetCourtPositions]"
					item = {
						widget_court_position_item = {}
					}
				}

				### Denied Court Positions Group Foldout ###
				vbox = {
					visible = "[Not( IsDataModelEmpty( CourtPositionsWindow.GetDeniedCourtPositions ) )]"
					margin_bottom = 8
					spacing = 4

					layoutpolicy_horizontal = expanding

					oncreate = "[BindFoldOutContext]"

					button_expandable_toggle_field = {
						blockoverride "text"
						{
							text = "[CourtPositionsWindow.GetGroupTitle]"
						}
					}

					vbox = {
						visible = "[PdxGuiFoldOut.IsUnfolded]"

						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						fixedgridbox = {
							name = "court_position_items"
							layoutpolicy_horizontal = expanding

							addcolumn = 180
							addrow = 228
							setitemsizefromcell = yes
							datamodel_wrap = 3
							flipdirection = yes

							datamodel = "[CourtPositionsWindow.GetDeniedCourtPositions]"
							item = {
								widget_court_position_item = {}
							}
						}
					}
				}

				blockoverride "scrollbox_expand" {
					expand = {}
				}
			}
		}

		expand = {}
	}
}

template court_position_tooltip_text_format
{
	layoutpolicy_horizontal = expanding
	autoresize = yes
	max_width = 380
	align = left
}

template court_position_header_background_colors
{
	modify_texture = {
		visible = "[CourtPositionType.HasNoPrimarySkill]"
		using = Color_Courtier_Blue
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'diplomacy' )]"
		using = Color_Courtier_Blue
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'martial' )]"
		using = Color_Red
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'stewardship' )]"
		using = Color_Green
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'intrigue' )]"
		using = Color_Courtier_Purple
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'learning' )]"
		using = Color_White
		blend_mode = normal
	}
	modify_texture = {
		visible = "[CourtPositionType.HasPrimarySkill( 'prowess' )]"
		using = Color_Red
		blend_mode = normal
	}
}
