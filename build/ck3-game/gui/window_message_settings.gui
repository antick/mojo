window = {
	datacontext = "[MessageSettingsWindow.GetCustomMessageWindow]"
	name = "window_message_settings"
	parentanchor = center
	size = { 690 800 }

	allow_outside = yes
	layer = middle

	using = Window_Size_MainTab
	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	oncreate = "[BindTabsContext]"
	oncreate = "[PdxGuiTabs.AddTab( 'settings' )]"
	oncreate = "[PdxGuiTabs.AddTab( 'log' )]"

	vbox = {
		using = Window_Margins

		### Header ###
		header_pattern = {
			name = "header"
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "MESSAGE_SETTINGS_WINDOW_NAME"
			}

			blockoverride "extra_buttons"
			{
				button_outliner = {
					size = { 30 30 }

					onclick = "[CustomMessageWindow.Toggle]"
					tooltip = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_TT"
				}
			}

			blockoverride "button_close"
			{
				onclick = "[MessageSettingsWindow.CloseWithConfirmation]"
			}
		}

		hbox_tab_buttons = {
			blockoverride "tab_name"
			{
				text = "[PdxGuiTabItem.LocalizeTab( 'message_settings_tab' )]"
			}
		}

		### SETTINGS TAB ###
		vbox = {
			visible = "[PdxGuiTabs.IsTabSet( 'settings' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			### Column Heders ###
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 6
				margin_bottom = 3

				hbox = {
					min_width = 208
					max_width = 208
					margin_left = 20

					layoutpolicy_horizontal = expanding
					text_label_left = {

						text = "MESSAGE_SETTINGS_WINDOW_COLUMN_FILTER_TYPE"
						tooltip = "MESSAGE_SETTINGS_WINDOW_COLUMN_FILTER_TYPE_TT"
						using = tooltip_ne
					}
					expand = {}
				}

				editbox_search_field = {
					min_width = 190
					max_width = 190

					blockoverride "editbox_properties"
					{
						text = "[MessageSettingsWindow.GetTextFilter]"
						ontextedited = "[MessageSettingsWindow.OnEditTextFilter]"
					}
				}

				hbox = {
					min_width = 130
					max_width = 130

					layoutpolicy_horizontal = expanding
					text_message_settings_column_header = {

						text = "MESSAGE_SETTINGS_WINDOW_COLUMN_APPEARANCE"
						tooltip = "MESSAGE_SETTINGS_WINDOW_COLUMN_APPEARANCE_TT"
						using = tooltip_ne
					}
				}
				hbox = {
					min_width = 30
					max_width = 30
					margin_right = 15

					layoutpolicy_horizontal = expanding
					text_message_settings_column_header = {

						text = "MESSAGE_SETTINGS_WINDOW_COLUMN_AUTO_PAUSE"
						tooltip = "MESSAGE_SETTINGS_WINDOW_COLUMN_AUTO_PAUSE_TT"
						using = tooltip_ne
					}
				}
			}

			### Message Groups and Filters List ###
			scrollbox = {
				name = "message_group_scrollarea"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_background_fade" {}
				blockoverride "scrollbox_content"
				{
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						name = "message_groups_container"
						visible = "[MessageSettingsWindow.IsTextFilterEmpty]"
						spacing = 2

						layoutpolicy_horizontal = expanding

						datamodel = "[MessageSettingsWindow.GetMessageGroupItems]"
						item = {
							vbox_message_group_foldout = {}
						}
					}
					vbox = {
						name = "serach_text_filter_container"
						visible = "[Not( MessageSettingsWindow.IsTextFilterEmpty )]"
						spacing = 2

						layoutpolicy_horizontal = expanding

						datamodel = "[MessageSettingsWindow.GetFilteredFilterItems]"
						item = {
							vbox_message_settings_filter_item = {}
						}
					}
				}
				blockoverride "scrollbox_expand" {
					expand = {}
				}
			}

			expand = {}

			### Footer ###
			vbox = {
				name = "footer"
				margin = { 0 12 }

				hbox = {
					spacing = 22

					button_standard = {
						name = "reset_settings_button"

						text = "MESSAGE_SETTINGS_WINDOW_RESET"
						size = { 155 33 }
						onclick = "[MessageSettingsWindow.ResetToDefault]"
						tooltip = "MESSAGE_SETTINGS_WINDOW_RESET_TT"
						using = tooltip_ne
					}

					button_primary = {
						name = "apply_settings_button"

						text = "MESSAGE_SETTINGS_WINDOW_APPLY"
						size = { 155 33 }
						onclick = "[MessageSettingsWindow.SaveAndClose]"
						tooltip = "MESSAGE_SETTINGS_WINDOW_APPLY_TT"
						using = tooltip_ne
					}
				}
			}
		}

		### LOG TAB ###
		scrollbox = {
			visible = "[PdxGuiTabs.IsTabSet( 'log' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_background_fade" {}

			blockoverride "scrollbox_content"
			{
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				fixedgridbox = {
					addcolumn = 570
					addrow = 224
					setitemsizefromcell = yes
					datamodel_wrap = 1
					flipdirection = yes

					datamodel = "[MessageSettingsWindow.GetMessageLogHistoryItems]"
					item = {
						widget_message_settings_log_history_item = {}
					}
				}
			}

			blockoverride "scrollbox_expand" {
				expand = {}
			}
		}

		expand = {}
	}

	window_message_settings_custom = {
		datacontext = "[MessageSettingsWindow.GetCustomMessageWindow]"
		visible = "[CustomMessageWindow.IsVisible]"
	}
}

types MessageSettingsTypes {
	type widget_message_settings_log_history_item = widget {
		datacontext = "[MessageLogHistoryItem.GetMessage]"
		max_height = 214
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding

		background = {
			using = Background_Frame
		}

		vbox = {
			margin = { 2 0 }
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			### PlayerMessageItem ###
			hbox = {
				margin = { 4 4 }
				layoutpolicy_horizontal = expanding

				### MESSAGE COLOR ###
				background = {
					name = "neutral"
					visible = "[Or( PlayerMessageItem.GetType.IsNeutral, PlayerMessageItem.GetType.IsNone )]"
					using = Feed_Message_Header
				}

				background = {
					name = "good"
					visible = "[PlayerMessageItem.GetType.IsGood]"
					using = Feed_Message_Header
					tintcolor = { 0.767708 0.78125 0.3479 0.847656 }
				}

				background = {
					name = "bad"
					visible = "[PlayerMessageItem.GetType.IsBad]"
					using = Feed_Message_Header
					tintcolor = { 0.949219 0.446105 0.330002 0.847656 }
				}

				### MESSAGE ICON ###
				icon = {
					size = { 32 32 }

					texture = "[PlayerMessageItem.GetType.GetIcon]"
					tooltip = "[PlayerMessageItem.GetTooltip]"
					using = tooltip_ws
				}

				### MESSAGE TITLE ###
				text_single = {
					margin_left = 6
					max_width = 360

					using = Font_Size_Medium

					text = "[PlayerMessageItem.GetTitle]"
					align = nobaseline
					fontsize_min = 14
				}

				expand = {}

				text_single = {
					margin_right = 10
					text = "[PlayerMessageItem.GetArrivalDate.GetStringShort]"
					align = nobaseline
				}

				### MESSAGE SETTINGS SHORTCUT
				widget = {
					size = { 26 26 }

					allow_outside = yes

					button_menu = {
						size = { 26 26 }

						onclick = "[ToggleGameViewData('message_settings', PlayerMessageItem.GetType.Self)]"
						onclick = "[PdxGuiTabs.SetTabByKey( 'settings' )]"
						tooltip = "MESSAGE_SETTINGS_WINDOW_SHORTCUT_TT"
						using = tooltip_se
					}
				}

				### MARK MESSAGE FOR DELETE
				widget = {
					size = { 26 26 }

					allow_outside = yes

					button_clear = {
						size = { 26 26 }

						onclick = "[MessageLogHistoryItem.MarkToDelete]"
						tooltip = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_DISCARD_TT"
						using = tooltip_se
					}
				}
			}

			expand = {}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				background = {
					using = Background_Area
				}

				text_multi = {
					margin = { 20 10 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					text = "[PlayerMessageItem.GetDescription]"
					elide = right
				}

				### MESSAGE PORTRAITS ###
				vbox = {
					margin_right = 8
					margin_top = 5
					layoutpolicy_vertical = expanding

					hbox = {
						portrait_head_small = {
							name = "portrait_left"
							datacontext = "[PlayerMessageItem.GetLeftCharacter]"
							visible = "[Character.IsValid]"
						}

						coa_title_medium = {
							name = "title_left"
							datacontext = "[PlayerMessageItem.GetLeftTitle]"
							visible = "[Title.IsValid]"
						}

						icon_artifact = {
							name = "artifact_left"
							datacontext = "[PlayerMessageItem.GetLeftArtifact]"
							visible = "[Artifact.IsValid]"
						}

						portrait_head_small = {
							name = "portrait_right"
							datacontext = "[PlayerMessageItem.GetRightCharacter]"
							visible = "[Character.IsValid]"
						}

						coa_title_medium = {
							name = "title_right"
							datacontext = "[PlayerMessageItem.GetRightTitle]"
							visible = "[Title.IsValid]"
						}

						icon_artifact = {
							name = "artifact_right"
							datacontext = "[PlayerMessageItem.GetRightArtifact]"
							visible = "[Artifact.IsValid]"
						}
					}
					expand = {}
				}
			}
		}
	}

	type text_message_settings_column_header = text_single {
		align = center|nobaseline

		background = {
			margin_left = 40
			margin_right = 40

			texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
			spriteType = Corneredtiled
			spriteborder = { 40 8 }
			texture_density = 2

			modify_texture = {
				name = "mask"
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
			}
		}
	}

	type vbox_message_settings_filter_item = vbox {
		layoutpolicy_horizontal = expanding
		hbox = {
			margin_left = 4
			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Area_Characterlist
			}

			text_single = {
				default_format = "#medium"
				align = left
				margin_left = 0
				margin_right = 40
				margin_bottom = 5
				fontsize_min = 12
				max_width = 395

				layoutpolicy_horizontal = expanding

				text = "[MessageFilterItem.GetName]"

				tooltip = "[MessageFilterItem.GetTooltip]"
				using = tooltip_ne
			}

			expand = {}

			dropdown_menu_standard =
			{
				blockoverride "dropdown_properties"
				{
					datamodel = "[MessageFilterItem.GetValidOptions]"
					onselectionchanged = "[MessageFilterItem.OnSelectOption]"
					selectedindex = "[MessageFilterItem.GetHoveredIndex]"
				}

				blockoverride "dropdown_size"
				{
					size = { 150 32 }
				}

				blockoverride "dropdown_list_maxsize"
				{
					maximumsize = { 141 200 }
				}

				blockoverride "dropdown_active_item_properties"
				{
					text = "[NotificationOption.GetName|U]"
				}

				blockoverride "dropdown_item_properties"
				{
					text = "[NotificationOption.GetName|U]"
				}
			}

			button_checkbox = {
				name = "toggle_auto_pause"

				checked = "[MessageFilterItem.HasAutoPause]"
				onclick = "[MessageFilterItem.ToggleAutoPause]"
				tooltip = "MESSAGE_SETTINGS_WINDOW_TOGGLE_AUTO_PAUSE_TT"
			}
		}
		expand = {}
	}

	type vbox_message_group_foldout = vbox {
		datacontext = "[MessageGroupItem.GetType]"
		spacing = 4

		layoutpolicy_horizontal = expanding

		oncreate = "[BindFoldOutContext]"
		oncreate = "[PdxGuiFoldOut.Unfold]"

		button_expandable_toggle_field = {
			blockoverride "text"
			{
				text = "[MessageGroupItem.GetGroupTitle]"
			}
		}

		vbox = {
			visible = "[PdxGuiFoldOut.IsUnfolded]"

			layoutpolicy_horizontal = expanding

			fixedgridbox = {
				name = "filters_in_group"

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				addcolumn = 575
				addrow = 34

				datamodel = "[MessageGroupItem.GetFilterItems]"
				item = {
					vbox_message_settings_filter_item = {}
				}
			}
		}
	}

	type window_message_settings_custom = window  {
		name = "custom_message_window"
		parentanchor = center
		position = { 0 -80 }
		size = { 400 510 }

		layer = confirmation
		movable = yes

		using = Window_Background_Subwindow

		vbox = {
			spacing = 15

			layoutpolicy_vertical = expanding

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_TITLE"
				}

				blockoverride "button_close"
				{
					onclick = "[CustomMessageWindow.Close]"
				}
			}

			editbox_standard_with_label = {
				margin = { 30 0 }

				layoutpolicy_horizontal = expanding

				blockoverride "editbox_label"
				{
					text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_EDIT_TITLE"
				}

				blockoverride "editbox_properties" 
				{
					name = "custom_message"

					multiline = no
					maxcharacters = 40
					focus_on_visible = yes

					text = "[CustomMessageWindow.GetTitle]"
					ontextedited = "[CustomMessageWindow.OnEditTitle]"
				}
			}

			editbox_standard_with_label = {
				margin = { 30 0 }

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "editbox_label"
				{
					text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_EDIT_DESC"
				}

				blockoverride "editbox_properties" 
				{
					name = "custom_message"

					multiline = yes

					text = "[CustomMessageWindow.GetDescription]"
					ontextedited = "[CustomMessageWindow.OnEditDescription]"
				}
			}

			hbox = {
				name = "custom_message_date"
				margin = { 30 0 }

				layoutpolicy_horizontal = expanding

				vbox = {
					text_label_left = {
						text = "[CustomMessageWindow.GetArrivalDate]"
					}
				}

				expand = {}
			}

			hbox = {
				spacing = 6

				### SET ARRIVAL DAYS
				hbox = {
					margin = { 2 0 }
					spacing = 6
					layoutpolicy_horizontal = expanding

					button_round = {
						size = { 24 24 }

						enabled = "[Not( CustomMessageWindow.MessageArrivesToday )]"
						onclick = "[CustomMessageWindow.AddDays( '(int32)-1' )]"

						button_minus_small = {
							name = "decrease_day"
							parentanchor = center
							alwaystransparent = yes
						}
					}

					text_single = {
						name = "select_day"

						text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_DAY"

						default_format = "#high"
						align = nobaseline|center
						min_width = 25
					}

					button_round = {
						size = { 24 24 }

						onclick = "[CustomMessageWindow.AddDays( '(int32)1' )]"

						button_plus_small = {
							name = "increase_day"
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}

				divider_light = {
					layoutpolicy_vertical = expanding
				}

				### SET ARRIVAL MONTHS
				hbox = {
					margin = { 2 0 }
					spacing = 6
					layoutpolicy_horizontal = expanding

					button_round = {
						size = { 24 24 }

						enabled = "[Not( CustomMessageWindow.MessageArrivesToday )]"
						onclick = "[CustomMessageWindow.AddMonths( '(int32)-1' )]"

						button_minus_small = {
							name = "decrease_month"
							parentanchor = center
							alwaystransparent = yes
						}
					}

					text_single = {
						name = "select_month"

						text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_MONTH"

						default_format = "#high"
						align = nobaseline|center
						min_width = 25
					}

					button_round = {
						size = { 24 24 }

						onclick = "[CustomMessageWindow.AddMonths( '(int32)1' )]"

						button_plus_small = {
							name = "increase_month"
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}

				divider_light = {
					layoutpolicy_vertical = expanding
				}

				### SET ARRIVAL YEARS
				hbox = {
					margin = { 2 0 }
					spacing = 6
					layoutpolicy_horizontal = expanding

					button_round = {
						size = { 24 24 }

						enabled = "[Not( CustomMessageWindow.MessageArrivesToday )]"
						onclick = "[CustomMessageWindow.AddYears( '(int32)-1' )]"

						button_minus_small = {
							name = "decrease_year"
							parentanchor = center
							alwaystransparent = yes
						}
					}

					text_single = {
						name = "select_year"

						text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_YEAR"

						default_format = "#high"
						align = nobaseline|center
						min_width = 25
					}

					button_round = {
						size = { 24 24 }

						onclick = "[CustomMessageWindow.AddYears( '(int32)1' )]"

						button_plus_small = {
							name = "increase_year"
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}
			}

			hbox = {
				name = "custom_message_buttons"
				margin_top = 8
				spacing = 22

				button_standard = {
					name = "discard_custom_message"
					size = { 155 33 }

					text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_DISCARD"

					onclick = "[CustomMessageWindow.Reset]"
					tooltip = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_DISCARD_TT"
					using = tooltip_ne
				}

				button_primary = {
					name = "send_custom_message"
					size = { 155 33 }

					text = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_SEND"

					onclick = "[CustomMessageWindow.SendMessage( GetPlayer, GetPlayer )]"
					onclick = "[CustomMessageWindow.Toggle]"
					tooltip = "MESSAGE_SETTINGS_WINDOW_CUSTOM_MESSAGE_SEND_TT"
					using = tooltip_ne
				}
			}

			expand = {}
		}
	}
}
