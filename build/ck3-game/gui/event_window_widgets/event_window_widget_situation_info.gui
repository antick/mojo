# Event window widget to show situation info
# Required controller: situation_info

vbox = {
	name = "event_window_widget_situation_info"
	EventWindowWidget = {}
}

types Situations
{
	type EventWindowWidget = vbox {
		layoutpolicy_horizontal = expanding
		ignoreinvisible = yes
		
		datacontext = "[EventWindowCustomWidgetSituationInfo.GetSituation]"
		datacontext = "[GetPlayer]"
		
		vbox = {
			name = "event_start_widget"
			visible = yes
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			spacing = 15
			
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 15
				
				text_single = {
					layoutpolicy_horizontal = expanding
					align = left
					text = "SITUATION_START_EVENT_DESC"
					multiline = yes
					max_width = 480
					default_format = "#medium"
					minimumsize = { 0 25 }
				}
			}
			
			hbox = {
				layoutpolicy_horizontal = expanding
				
				text_label_center = {
					layoutpolicy_horizontal = expanding
					align = center
					text = "SITUATION_START_EVENT_DETAIL_TITLE"
					max_width = 480
					default_format = "#P"
					minimumsize = { 0 25 }
				}
			}
			
			block "situation_info_content"
			{
				hbox = {
					layoutpolicy_vertical = expanding
					spacing = 15
					
					SituationInfo = {}
					
					SituationInfo = {}
					
					SituationInfo = {}
					
				}
			}
		}
	}
	
	type SituationInfo = vbox {
		
		container = {
			name = "situation_effect"
			datacontext = "[Situation.GetTopSubRegion.GetCurrentPhase]"
			block "situation_tooltip"
			{
				#tooltipwidget = "relevant tooltip"
			}
			icon = {
				parentanchor = center
				size = { 70 70 }
				texture = "gfx/interface/icons/situations/icon_background_01.dds"
			}
			icon = {
				parentanchor = center
				size = { 55 55 }
				block "situation_icon"
				{
					#texture = "relevant texture"
				}
			}
		}

		spacer = {
			size = { 0 10 }
		}
		
		text_single = {
			layoutpolicy_horizontal = expanding
			align = center
			block "situation_text"
			{
				text = "SITUATION_INFO_WIDGET_DEBUG"
			}
		}
	}
}