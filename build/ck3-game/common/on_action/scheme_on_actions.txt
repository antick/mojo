# Root is the scheme being discovered.
on_scheme_discovered = {
	effect = {
		scheme_target_character ?= {
			if = {
				limit = {
					# Are we at a court that we own?
					host != this
					is_ruler = no
					# And, importantly, are we someone who our host should care about protecting?
					OR = {
						is_player_heir_of = host
						is_consort_of = host
						has_any_moderate_good_relationship_with_character_trigger = { CHARACTER = host }
						AND = {
							reverse_opinion = {
								target = host
								value >= 1
							}
							has_relation_guardian = host
						}
					}
				}
				# If this is a murder scheme, we want one set of countermeasures.
				if = {
					limit = {
						root = { scheme_type = murder }
					}
					host = {
						add_to_variable_list = {
							name = host_should_prevent_murder_schemes_list
							target = prev
							# We put a years count in here because most schemes won't go longer than this, and tracking when someone leaves a court is gonna get horrible.
							years = 10
						}
					}
				}
				# If it's a seduction, we want another.
				else_if = {
					limit = {
						root = { scheme_type = seduce }
					}
					host = {
						add_to_variable_list = {
							name = host_should_prevent_seduce_schemes_list
							target = prev
							# We put a years count in here because most schemes won't go longer than this, and tracking when someone leaves a court is gonna get horrible.
							years = 10
						}
					}
				}
			}
		}
	}
}
 
# Root is the scheme being discovered.
# Scope:agent is the exposed agent.
on_scheme_agent_discovered = {
}

on_scheme_opportunity_changed = {
	effect = {
		if = {
			limit = {
				scope:old_value < multi_ending_scheme_charge_to_advance_threshold_t4_value
				scope:new_value >= multi_ending_scheme_charge_to_advance_threshold_t4_value
			}
			scope:scheme.scheme_owner ?= {
				send_interface_message = {
					type = msg_scheme_opportunity_threshold
					title = scheme_end_buff_t4_modifier
					desc = msg_scheme_opportunity_threshold_4_desc
					left_icon = scope:scheme.scheme_target_character
				}
			}
		}
		else_if = {
			limit = {
				scope:old_value < multi_ending_scheme_charge_to_advance_threshold_t3_value
				scope:new_value >= multi_ending_scheme_charge_to_advance_threshold_t3_value
			}
			scope:scheme.scheme_owner ?= {
				send_interface_message = {
					type = msg_scheme_opportunity_threshold
					title = scheme_end_buff_t3_modifier
					desc = msg_scheme_opportunity_threshold_3_desc
					left_icon = scope:scheme.scheme_target_character
				}
			}
		}
		else_if = {
			limit = {
				scope:old_value < multi_ending_scheme_charge_to_advance_threshold_t2_value
				scope:new_value >= multi_ending_scheme_charge_to_advance_threshold_t2_value
			}
			scope:scheme.scheme_owner ?= {
				send_interface_message = {
					type = msg_scheme_opportunity_threshold
					title = scheme_end_buff_t2_modifier
					desc = msg_scheme_opportunity_threshold_2_desc
					left_icon = scope:scheme.scheme_target_character
				}
			}
		}
		else_if = {
			limit = {
				scope:old_value < multi_ending_scheme_charge_to_advance_threshold_t1_value
				scope:new_value >= multi_ending_scheme_charge_to_advance_threshold_t1_value
			}
			scope:scheme.scheme_owner ?= {
				send_interface_message = {
					type = msg_scheme_opportunity_threshold
					title = scheme_end_buff_t1_modifier
					desc = msg_scheme_opportunity_threshold_1_desc
					left_icon = scope:scheme.scheme_target_character
				}
			}
		}
	}
}

agent_events_on_action = {
	trigger = { exists = scope:scheme }
	random_events = {
		# Agent harmony.
		100 = agent_events.0002	# Two agents really like each other.
		50 = agent_events.0011	# Agents bond over the experience, forming a relationship (friendship version).
		50 = agent_events.0012	# Agents bond over the experience, forming a relationship (lovers version).
		100 = agent_events.0021	# One agent teaches another.
		100 = agent_events.0031	# Agent learns by doing.
		50 = agent_events.0041	# Agent offers to teach you.
		
		# Agent tension.
		100 = agent_events.1002	# Two agents hate each other.
		50 = agent_events.1012	# Agents form a rivalry/grudge over the experience.
		
		
		# Agent synergies.
		100 = agent_events.2001	# Positive relations help scheme
		100 = agent_events.2011	# Negative relations hurt scheme
		100 = agent_events.2021	# Skilled agents with opposite traits compete
		
		# Important relations.
		100 = agent_events.3001	# Your lovers & friends offer to put more effort in.
		100 = agent_events.3011	# Your lovers & friends ask you to relax your efforts a little.
		100 = agent_events.3021	# Your family brought together by scheming
		100 = agent_events.3031	# Your family torn apart by scheming.
		100 = agent_events.3041	# Their close relations/positive-opinion family have second thoughts.
		100 = agent_events.3051	# Their rivals grow to respect and bond with you over scheme.
		100 = agent_events.3061	# Their spymaster buys you a grace refresh.
		100 = agent_events.3071	# Their spymaster, high scheme skill councillor, or nemesis unlocks additional agent slots.
		
		# Distance to target.
		100 = agent_events.4001	# Distance hampers agent effectiveness.
		100 = agent_events.4011	# Distance enhances agent effectiveness.
	}
}
