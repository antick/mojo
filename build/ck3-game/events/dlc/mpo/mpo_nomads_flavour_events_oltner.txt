namespace = nomad_events_oltner

# Hunt sighting in your lands
# Bird sighting in your lands
# Dangerous Hunt sighting in your lands
# Zud - Dangerous animals eat your herd
# Good season! Animals aplenty.
# You are offered a skilled Master of the Chase from a tributary
# Given a falcon from a vassal/tributary

nomad_events_oltner.0001 = { # Hunt sighting in your lands
	type = character_event
	title = nomad_events_oltner.0001.t
	desc = nomad_events_oltner.0001.desc
	theme = hunting
	left_portrait = {
		character = root
		animation = horse_archer_idle
		camera = camera_event_horse_right
	}
	cooldown = { years = 3 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		any_sub_realm_county = {
			count >= 2
			hunt_activity_recent_hunt_sighting_trigger = no
			is_landless_type_title = no
		}
	}
	
	immediate = {
		hidden_effect = {
			every_sub_realm_county = {
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					is_landless_type_title = no
				}
				add_to_list = sighting_counties
			}
			random_in_list = {
				list = sighting_counties
				limit = { hunt_activity_recent_hunt_sighting_trigger = no }
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_1
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_1
				}
			}
			random_in_list = {
				list = sighting_counties
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					this != scope:sighting_county_1
				}
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_2
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_2
				}
			}
			scope:sighting_county_1 = {
				hunt_activity_standard_game_effect = { PROVINCE = scope:sighting_province_1 HUNTER = root }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = standard
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
			scope:sighting_county_2 = {
				hunt_activity_dangerous_game_effect = { PROVINCE = scope:sighting_province_2 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = dangerous
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
	}
	
	option = { # First sighting
		name = nomad_events_oltner.0001.a
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_standard_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_2 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Second sighting
		name = nomad_events_oltner.0001.b
		scope:sighting_county_2 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Ignore
		name = nomad_events_oltner.0001.c
		add_prestige = minor_prestige_gain
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
			scope:sighting_county_2 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 0
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0002 = { # Bird sighting in your lands
	type = character_event
	title = nomad_events_oltner.0002.t
	desc = nomad_events_oltner.0002.desc
	theme = hunting
	left_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_right
	}
	
	cooldown = { years = 3 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		# Falconry DLC feature
		has_dlc_feature = tours_and_tournaments
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		any_sub_realm_county = {
			hunt_activity_recent_hunt_sighting_trigger = no
			is_landless_type_title = no
		}
	}
	
	immediate = {
		hidden_effect = {
			random_sub_realm_county = {
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					is_landless_type_title = no
				}
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_1
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_1
				}
			}
			scope:sighting_county_1 = {
				hunt_activity_falconry_game_effect = { PROVINCE = scope:sighting_province_1 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = falconry
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
	}
	
	option = { # Birds spotted
		name = nomad_events_oltner.0002.a
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_falconry_modifier
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Rather hunt land prey
		name = nomad_events_oltner.0002.b
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_standard_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
				hunt_activity_standard_game_effect = { PROVINCE = scope:sighting_province_1 HUNTER = root }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = standard
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Ignore
		name = nomad_events_oltner.0002.c
		add_prestige = minor_prestige_gain
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 0
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0003 = { # Danger sighting in your lands
	type = character_event
	title = nomad_events_oltner.0003.t
	desc = nomad_events_oltner.0003.desc
	theme = hunting
	left_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_right
	}
	
	cooldown = { years = 3 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		any_sub_realm_county = {
			hunt_activity_recent_hunt_sighting_trigger = no
			is_landless_type_title = no
		}
		any_maa_regiment = {
		}
	}
	
	immediate = {
		hidden_effect = {
			random_sub_realm_county = {
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					is_landless_type_title = no
				}
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_1
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_1
				}
			}
			scope:sighting_county_1 = {
				hunt_activity_dangerous_game_effect = { PROVINCE = scope:sighting_province_1 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = dangerous
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		domicile = {
			change_herd = {
				value = -21
			}
		}
		random_maa_regiment = {
			save_scope_as = maa_regiment
		}
	}
	
	option = { # Go after them
		name = nomad_events_oltner.0003.a
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		stress_impact = {
			brave = minor_stress_impact_loss
			craven = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Send troops to kill the wolf pack
		name = nomad_events_oltner.0003.b
		add_prestige = medium_prestige_gain
		scope:maa_regiment = {
			change_maa_troops_count = {
				value = {
					value = this.maa_current_troops_count
					multiply = -0.1
				}
			}
		}
		scope:sighting_county_1 = {
			show_as_tooltip = {
				remove_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Ignore
		name = nomad_events_oltner.0003.c
		add_piety = minor_piety_gain
		scope:sighting_county_1 = {
			show_as_tooltip = {
				remove_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		stress_impact = {
			brave = medium_stress_impact_gain
			craven = minor_stress_impact_loss
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_remove_sighting_effect = yes
				remove_variable = recent_sighting
			}
		}
		ai_chance = {
			base = 0
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0004 = { # Zud - Dangerous animals eat your herd
	type = character_event
	title = nomad_events_oltner.0004.t
	desc = nomad_events_oltner.0004.desc
	theme = hunting
	left_portrait = {
		character = root
		animation = horse_exhausted
		camera = camera_event_horse_right
	}
	
	widgets = {
		widget = {
			is_shown = {
				any_character_situation = {
					OR = {
						any_situation_sub_region = {
							sub_region_current_phase = situation_steppe_white_zud_season
							situation_sub_region_has_county = root.capital_county
						}
						any_situation_sub_region = {
							sub_region_current_phase = situation_steppe_cold_zud_season
							situation_sub_region_has_county = root.capital_county
						}
					}
				}
			}
			gui = "event_window_widget_vfx_snow"
			container = "foreground_shader_vfx_container"
		}

		widget = {
			is_shown = {
				any_character_situation = {
					any_situation_sub_region = {
						sub_region_current_phase = situation_steppe_cold_zud_season
						situation_sub_region_has_county = root.capital_county
					}
				}
			}
			gui = "event_window_widget_vfx_snowstorm"
			container = "foreground_shader_vfx_container"
		}
	}
	
	cooldown = { years = 3 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		any_sub_realm_county = {
			hunt_activity_recent_hunt_sighting_trigger = no
			is_landless_type_title = no
		}
		any_character_situation = {
			OR = {
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_havsarsan_zud_season
					situation_sub_region_has_county = root.capital_county
				}
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_white_zud_season
					situation_sub_region_has_county = root.capital_county
				}
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_cold_zud_season
					situation_sub_region_has_county = root.capital_county
				}
			}
		}
	}
	
	immediate = {
		hidden_effect = {
			random_sub_realm_county = {
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					is_landless_type_title = no
				}
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_1
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_1
				}
			}
			scope:sighting_county_1 = {
				hunt_activity_dangerous_game_effect = { PROVINCE = scope:sighting_province_1 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = dangerous
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		random_character_situation = {
			limit = {
				any_participant_group = {
					participant_group_type = nomad_rulers_capital
					participant_group_has_character = root
				}
			}
			random_participant_group = {
				limit = {
					participant_group_type = nomad_rulers_capital
					participant_group_has_character = root
				}
				participant_group_sub_region = { save_scope_as = my_subregion }
		   }
		}
	}
	
	option = { # Go after them
		name = nomad_events_oltner.0004.a
		add_prowess_skill = 2
		domicile = {
			change_herd = minor_herd_loss
		}
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Go after them
		name = nomad_events_oltner.0004.b
		add_stewardship_skill = 1
		domicile = {
			change_herd = medium_herd_loss
		}
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0005 = { # Good season! Animals aplenty.
	type = character_event
	title = nomad_events_oltner.0005.t
	desc = nomad_events_oltner.0005.desc
	theme = hunting
	left_portrait = {
		character = root
		animation = horse_archer_idle
		camera = camera_event_horse_right
	}
	
	cooldown = { years = 3 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		any_sub_realm_county = {
			hunt_activity_recent_hunt_sighting_trigger = no
			is_landless_type_title = no
		}
		any_character_situation = {
			OR = {
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_abundant_grazing_season
					situation_sub_region_has_county = root.location.county
				}
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_warm_nights_season
					situation_sub_region_has_county = root.location.county
				}
				any_situation_sub_region = {
					sub_region_current_phase = situation_steppe_sky_blessing_season
					situation_sub_region_has_county = root.location.county
				
				}
			}
		}
	}
	
	immediate = {
		hidden_effect = {
			random_sub_realm_county = {
				limit = {
					hunt_activity_recent_hunt_sighting_trigger = no
					is_landless_type_title = no
				}
				weight = {
					base = 1
					hunt_activity_sighting_county_modifier = yes
				}
				save_scope_as = sighting_county_1
				random_county_province = {
					weight = {
						base = 1
						hunt_activity_sighting_terrain_modifier = yes
						hunt_activity_sighting_building_modifier = { PROVINCE = this }
						hunt_activity_game_building_modifier = { PROVINCE = this }
					}
					save_scope_as = sighting_province_1
				}
			}
		}
		random_character_situation = {
			limit = {
				any_participant_group = {
					participant_group_type = nomad_rulers_capital
					participant_group_has_character = root
				}
			}
			random_participant_group = {
				limit = {
					participant_group_type = nomad_rulers_capital
					participant_group_has_character = root
				}
				participant_group_sub_region = { save_scope_as = my_subregion }
		   }
		}
	}
	
	option = { # Dangerous game
		name = nomad_events_oltner.0005.a
		add_prowess_skill = 1
		
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_dangerous_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_activity_dangerous_game_effect = { PROVINCE = scope:sighting_province_1 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = dangerous
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Regular game
		name = nomad_events_oltner.0005.b
		add_piety = medium_piety_gain
		
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_standard_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_activity_standard_game_effect = { PROVINCE = scope:sighting_province_1 HUNTER = root }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = standard
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Birb
		name = nomad_events_oltner.0005.c
		add_prestige = medium_prestige_gain
		
		scope:sighting_county_1 = {
			show_as_tooltip = {
				add_county_modifier = hunt_sighting_falconry_modifier
			}
		}
		hidden_effect = {
			scope:sighting_county_1 = {
				hunt_activity_falconry_game_effect = { PROVINCE = scope:sighting_province_1 }
				# Create new sighting
				hunt_create_sighting_effect = {
					TYPE = falconry
					ANIMAL = var:animal_type
					OWNER = root
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0006 = { # You are offered a skilled Master of the Chase from a tributary
	type = character_event
	title = nomad_events_oltner.0006.t
	desc = nomad_events_oltner.0006.desc
	theme = nomads
	left_portrait = {
		character = scope:offered_master_of_the_hunt
		animation = hunting_knife_start
	}
	right_portrait = {
		character = scope:generous_tributary
		animation = obsequious_bow
	}
	
	cooldown = { years = 5 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		is_valid_to_hire_court_position_type = master_of_hunt_court_position
		OR = {
			NOT = { employs_court_position = master_of_hunt_court_position }
			court_position:master_of_hunt_court_position ?= {
				aptitude = {
					court_position = master_of_hunt_court_position
					value < 4
				}
			}
		}
		any_tributary = {
			is_available_ai_adult = yes
			is_at_war = no
			NOT = { has_relation_rival = root }
			any_courtier = {
				is_available_healthy_ai_adult = yes
				master_of_hunt_validity_trigger = { EMPLOYER = root }
				NOR = {
					is_close_or_extended_family_of = root
					is_close_family_of = prev
					has_relation_rival = root
					has_court_position = court_astrologer_court_position
				}
				aptitude = {
					court_position = master_of_hunt_court_position
					value >= 4
				}
			}
		}
	}
	
	immediate = {
		random_tributary = {
			limit = {
				is_available_adult = yes
				is_at_war = no
				NOT = { has_relation_rival = root }
				any_courtier = {
					is_available_healthy_ai_adult = yes
					master_of_hunt_validity_trigger = { EMPLOYER = root }
					NOR = {
						is_close_or_extended_family_of = root
						is_close_family_of = prev
						has_relation_rival = root
						has_court_position = court_astrologer_court_position
					}
					aptitude = {
						court_position = master_of_hunt_court_position
						value >= 4
					}
				}
			}
			save_scope_as = generous_tributary
			random_courtier = {
				limit = {
					is_available_healthy_ai_adult = yes
					master_of_hunt_validity_trigger = { EMPLOYER = root }
					NOR = {
						is_close_or_extended_family_of = root
						is_close_family_of = prev
						has_relation_rival = root
						has_court_position = court_astrologer_court_position
					}
					aptitude = {
						court_position = master_of_hunt_court_position
						value >= 4
					}
				}
				save_scope_as = offered_master_of_the_hunt
				hidden_effect = {
					assign_random_nickname_effect = yes
				}
			}
		}
	}
	
	option = { # Accept
		name = nomad_events_oltner.0006.a
		
		court_position_grant_effect = { POS = master_of_hunt CANDIDATE = scope:offered_master_of_the_hunt EMPLOYER = root }
		
		reverse_add_opinion = {
			target = scope:offered_master_of_the_hunt
			modifier = loyal_servant
		}
		
		stress_impact = {
			arrogant = minor_stress_loss
			ambitious = minor_stress_loss
			paranoid = minor_stress_gain
		}
		
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Accept and reward
		name = nomad_events_oltner.0006.b
		
		pay_short_term_gold = {
			target = scope:generous_tributary
			gold = minor_gold_value
		}
		
		reverse_add_opinion = {
			target = scope:generous_tributary
			modifier = obedience_opinion
		}
		
		court_position_grant_effect = { POS = master_of_hunt CANDIDATE = scope:offered_master_of_the_hunt EMPLOYER = root }
		
		reverse_add_opinion = {
			target = scope:offered_master_of_the_hunt
			modifier = loyal_servant
		}
		
		stress_impact = {
			arrogant = minor_stress_loss
			ambitious = minor_stress_loss
			paranoid = minor_stress_gain
		}
		
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				gold < major_gold_value
			}
		}
	}
	
	option = { # Deny
		name = nomad_events_oltner.0006.c
		
		reverse_add_opinion = {
			target = scope:generous_tributary
			modifier = respect_opinion
			opinion = 15
		}
		
		stress_impact = {
			paranoid = minor_stress_loss
		}
		
		ai_chance = {
			base = 0
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}

nomad_events_oltner.0007 = { # You are offered a falcon from a tributary
	type = character_event
	title = nomad_events_oltner.0007.t
	desc = nomad_events_oltner.0007.desc
	theme = nomads
	left_portrait = {
		character = root
		animation = hunting_knife_start
	}
	right_portrait = {
		character = scope:generous_tributary
		animation = hunting_falcon
	}
	
	cooldown = { years = 10 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		is_available_adult = yes
		is_at_war = no
		is_landed = yes
		NOT = {
			has_character_modifier = peregrine_falcon
		}
		any_tributary = {
			is_available_ai_adult = yes
			is_at_war = no
			NOT = { has_relation_rival = root }
		}
	}
	
	immediate = {
		random_tributary = {
			limit = {
				is_available_ai_adult = yes
				is_at_war = no
				NOT = { has_relation_rival = root }
			}
			save_scope_as = generous_tributary
			capital_county = { save_scope_as = tribute_capital_county }
			capital_province = { save_scope_as = tribute_capital }
		}
	}
	
	option = { # Accept
		name = nomad_events_oltner.0007.a
		
		add_character_modifier = {
			modifier = peregrine_falcon
			years = 7
		}
		
		stress_impact = {
			arrogant = minor_stress_loss
			ambitious = minor_stress_loss
		}
		
		ai_chance = {
			base = 100
		}
	}
	
	option = { # Accept and reward
		name = nomad_events_oltner.0007.b
		
		reverse_add_opinion = {
			target = scope:generous_tributary
			modifier = respect_opinion
			opinion = 15
		}
		
		ai_chance = {
			base = 0
		}
	}
	
	after = {
		if = {
			limit = {
				is_ai = yes
				is_at_war = no
			}
			ai_attempt_to_host_activity = activity_hunt
		}
	}
}
