namespace = steal_herd_outcome

#################################
# Positive Outcomes
# 1000-1999
#################################

# Basic success event
steal_herd_outcome.1001 = {
    type = character_event
	window = scheme_successful_event
	title = steal_herd_outcome.1001.t
	desc = steal_herd_outcome.1001.desc
	theme = generic_intrigue_scheme
	left_portrait = {
		character = scope:owner
		animation = eccentric
	}
	right_portrait = {
		character = scope:courtier
		animation = holding_staff
	}
	lower_right_portrait = scope:target

    widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

    immediate = {
        if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
			root = { save_scope_as = owner }
        }
		if = {
			limit = {
				scope:scheme = { any_scheme_agent_character = { count >= 1 } }
			}
			scope:scheme = { random_scheme_agent_character = { save_scope_as = courtier } }
		}
		else_if = {
			limit = {
				exists = scope:owner.cp:councillor_spymaster
			}
			scope:owner.cp:councillor_spymaster = { save_scope_as = courtier }
		}
		else = {
			scope:owner = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = courtier
				}
			}
		}
	}

    option = {
		name = steal_herd_outcome.1001.a

		show_as_tooltip = { steal_herd_success_effect = yes }
		
		scope:scheme = {
			end_scheme = yes
		}

		scope:target = {
			trigger_event = steal_herd_outcome.1002 #Notify target
		}
	}
}

steal_herd_outcome.1002 = {
	type = character_event
	window = scheme_target_event
	title = steal_herd_outcome.1002.t
	desc = {
		desc = steal_herd_outcome.1002.desc
		triggered_desc = {
			trigger = {
				scope:owner = { has_character_flag = steal_herd_money }
			}
			desc = steal_herd_outcome.1002.desc_monies
		}
	}
	theme = generic_intrigue_scheme
	left_portrait = {
		character = scope:target
		animation = stress
	}
	right_portrait = {
		character = scope:spymaster
		animation = disappointed
	}
	lower_right_portrait = scope:owner

	immediate = {
		if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
        }
		if = {
			limit = {
				scope:target = { exists = cp:councillor_spymaster }
			}
			scope:target = { cp:councillor_spymaster = { save_scope_as = spymaster } }
		}
		else = {
			scope:target = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = spymaster
				}
			}
		}
		scope:owner = { steal_herd_success_effect = yes }
	}

	option = {
		name = steal_herd_outcome.1002.a
	}
}

steal_herd_outcome.1003 = {
	type = character_event
	window = scheme_successful_event
	title = steal_herd_outcome.1001.t
	desc = {
		desc = steal_herd_outcome.1001.desc
		desc = steal_herd_outcome.1003.desc
	}
	theme = generic_intrigue_scheme
	
	left_portrait = {
		character = scope:owner
		animation = happiness
	}
	right_portrait = {
		character = scope:courtier
		animation = storyteller
	}
	lower_right_portrait = scope:target
	lower_left_portrait = {
		trigger = {
			exists = scope:target.primary_spouse
			can_start_scheme = {
				type = seduce
				target_character = scope:target.primary_spouse
			}
		}
		character = scope:target.primary_spouse
	}

    widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 4
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_additional_outcomes_lvl_1
			}
		}
		modifier = {
			add = 9
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_additional_outcomes_lvl_2
			}
		}
		modifier = {
			add = 19
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_additional_outcomes_lvl_3
			}
		}
	}


    immediate = {
		if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
			root = { save_scope_as = owner }
        }
		if = {
			limit = {
				scope:scheme = { any_scheme_agent_character = { count >= 1 } }
			}
			scope:scheme = { random_scheme_agent_character = { save_scope_as = courtier } }
		}
		else_if = {
			limit = {
				exists = scope:owner.cp:councillor_spymaster
			}
			scope:owner.cp:councillor_spymaster = { save_scope_as = courtier }
		}
		else = {
			scope:owner = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = courtier
				}
			}
		}
	}

	# More herd pls
    option = {
		name = steal_herd_outcome.1003.a

		duel = {
			desc = steal_herd_outcome.1003.a_desc
			skills = { martial prowess }
			target = scope:target
			30 = {
				desc = steal_herd_outcome.1003.win
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -29
				}
				add_character_flag = steal_herd_extra
				send_interface_toast = {
					title = steal_herd_outcome.1003.win
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target
					show_as_tooltip = {
						scope:target = { pay_herd = { target = scope:owner value = domicile.five_percent_current_herd_value } }
					}
				}
			}
			70 = {
				desc = steal_herd_outcome.1003.lose
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -69
				}
				send_interface_toast = {
					title = steal_herd_outcome.1003.lose
					type = event_toast_effect_neutral
					left_icon = root
					right_icon = scope:target
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 1
			}
			modifier = {
				factor = 1.5 #I need this
				domicile ?= { herd <= twenty_percent_herd_value }
			}
			modifier = {
				factor = 1.5
				OR = {
					highest_skill_including_prowess = martial
					highest_skill_including_prowess = prowess
				}
			}
		}
	}

	# Monies pls
	option = {
		name = steal_herd_outcome.1003.b
		
		trigger = {
			scope:target.gold >= scope:target.medium_gold_value
		}

		duel = {
			desc = steal_herd_outcome.1003.b_desc
			skill = stewardship
			target = scope:target
			50 = {
				desc = steal_herd_outcome.1003.win
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				add_character_flag = steal_herd_money
				send_interface_toast = {
					title = steal_herd_outcome.1003.win
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target
					show_as_tooltip = {
						scope:target = {
							pay_short_term_gold = {
								target = scope:owner
								gold = medium_gold_value
							}
						}
					}
				}
			}
			50 = {
				desc = steal_herd_outcome.1003.lose
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					desc = steal_herd_outcome.1003.lose
					type = event_toast_effect_neutral
					left_icon = root
					right_icon = scope:target
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 1
			}
			modifier = {
				factor = 1.5 #I need this
				short_term_gold <= medium_gold_value
			}
			modifier = {
				factor = 1.5
				highest_skill_including_prowess = stewardship
			}
		}
	} 

	# His wife pls
	option = {
		name = steal_herd_outcome.1003.c
		trigger = {
			exists = scope:target.primary_spouse
			can_start_scheme = {
				type = seduce
				target_character = scope:target.primary_spouse
			}
		}
		custom_tooltip = {
			text = steal_herd_outcome.1003.c_tt
			start_scheme = {
				type = seduce
				target_character = scope:target.primary_spouse
			}
			random_scheme = {
				limit = {
					scheme_type = seduce
					scheme_target_character = scope:target.primary_spouse
				}
				add_scheme_modifier = { type = mpo_steal_herd_seduce_modifier }
			}
		}

		stress_impact = {
			lustful = minor_stress_impact_loss
			chaste = minor_stress_impact_gain
		}

		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_honor = 0.5
			}
			modifier = {
				factor = 2
				has_trait = lustful
			}
		}
	} 

	# Okay, now die
	option = {
		name = steal_herd_outcome.1003.d
		trigger = { 
			has_personality_malicious_trigger = yes
		}
		custom_tooltip = {
			text = steal_herd_outcome.1003.d_tt
			start_scheme = {
				type = murder
				target_character = scope:target
			}
			random_scheme = {
				limit = {
					scheme_type = murder
					scheme_target_character = scope:target
				}
				add_scheme_modifier = { type = mpo_steal_herd_murder_modifier }
			}
		}

		stress_impact = {
			callous = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = 0.1
			}
			modifier = {
				factor = 2
				has_trait = callous
			}
		}
	}

	# Nothing
	option = {
		name = steal_herd_outcome.1003.e

		stress_impact = {
			content = minor_stress_impact_loss
		}

		ai_chance = {
			base = 50
		}
	}

	after = {
		show_as_tooltip = { steal_herd_success_effect = yes }
		scope:scheme = {
			end_scheme = yes
		}

		scope:target = {
			trigger_event = steal_herd_outcome.1002 #Notify target
		}
	}
}

#################################
# Negative Outcomes
# 2000-2999
#################################

steal_herd_outcome.2001 = {
	type = character_event
	window = scheme_failed_event
	title = steal_herd_outcome.2001.t
	desc = steal_herd_outcome.2001.desc
	theme = generic_intrigue_scheme

	left_portrait = {
		character = scope:owner
		animation = dismissal
	}
	right_portrait = {
		character = scope:courtier
		animation = disappointed
	}
	lower_right_portrait = scope:target

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	immediate = {
		if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
			root = { save_scope_as = owner }
        }
		if = {
			limit = {
				scope:scheme = { any_scheme_agent_character = { count >= 1 } }
			}
			scope:scheme = { random_scheme_agent_character = { save_scope_as = courtier } }
		}
		else_if = {
			limit = {
				exists = scope:owner.cp:councillor_spymaster
			}
			scope:owner.cp:councillor_spymaster = { save_scope_as = courtier }
		}
		else = {
			scope:owner = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = courtier
				}
			}
		}
	}

	option = {
		name = steal_herd_outcome.2001.a

		steal_herd_failure_effect = yes
		scope:scheme = {
			end_scheme = yes
		}
	}
}

steal_herd_outcome.2002 = {
	type = character_event
	window = scheme_failed_event
	title = steal_herd_outcome.2001.t
	desc = steal_herd_outcome.2002.desc
	theme = generic_intrigue_scheme

	left_portrait = {
		character = scope:owner
		animation = dismissal
	}
	right_portrait = {
		character = scope:courtier
		animation = stress
	}
	lower_right_portrait = scope:target

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 4
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_prevention_lvl_1
			}
		}
		modifier = {
			add = 9
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_prevention_lvl_2
			}
		}
		modifier = {
			add = 19
			domicile ?= {
				has_domicile_parameter = steal_herd_domicile_prevention_lvl_3
			}
		}
	}

	immediate = {
		if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
			root = { save_scope_as = owner }
        }
		if = {
			limit = {
				scope:scheme = { any_scheme_agent_character = { count >= 1 } }
			}
			scope:scheme = { random_scheme_agent_character = { save_scope_as = courtier } }
		}
		else_if = {
			limit = {
				exists = scope:owner.cp:councillor_spymaster
			}
			scope:owner.cp:councillor_spymaster = { save_scope_as = courtier }
		}
		else = {
			scope:owner = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = courtier
				}
			}
		}
	}

	option = {
		name = steal_herd_outcome.2002.a

		steal_herd_failure_effect = yes

		pay_herd = {
			target = scope:target
			value = domicile.ten_percent_herd_value
		}

		scope:target = {
			trigger_event = steal_herd_outcome.2003 #Notify target
		}

		scope:scheme = {
			end_scheme = yes
		}
	}
}

steal_herd_outcome.2003 = {
	type = character_event
	window = scheme_target_event
	title = steal_herd_outcome.2003.t
	desc = steal_herd_outcome.2003.desc
	theme = generic_intrigue_scheme

	left_portrait = {
		character = scope:target
		animation = happiness
	}

	right_portrait = {
		character = scope:courtier
		animation = storyteller
	}
	
	lower_center_portrait = scope:owner

	immediate = {
		if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
			root = { save_scope_as = owner }
        }
		scope:owner = {
			show_as_tooltip = {
				steal_herd_failure_effect = yes
			}
		}
		if = {
			limit = {
				exists = scope:target.cp:councillor_spymaster
			}
			scope:target.cp:councillor_spymaster = { save_scope_as = courtier }
		}
		else = {
			scope:target = {
				ordered_courtier = {
					order_by = intrigue
					save_scope_as = courtier
				}
			}
		}
	}

	option = {
		name = steal_herd_outcome.2003.a	
		scope:owner = {
			show_as_tooltip = {
				pay_herd = {
					target = scope:target
					value = domicile.ten_percent_herd_value
				}
			}
		}
	}
}