namespace = steal_herd_ongoing

scripted_effect add_random_negative_scheme_modifier_effect = {
    custom_tooltip = {
        text = random_negative_scheme_modifier_tt
        random_list = {
            1 = { add_scheme_modifier = { type = mpo_steal_herd_almost_caught_modifier } }
            1 = { add_scheme_modifier = { type = mpo_steal_herd_almost_caught_modifier_2 } }
            1 = { add_scheme_modifier = { type = mpo_steal_herd_almost_caught_modifier_3 } }
        }
    }
}

#Talking with a knight or a peasant in the realm, maybe can help me steal more
steal_herd_ongoing.1001 = {
	type = character_event
	title = steal_herd_ongoing.1001.t
	desc = steal_herd_ongoing.1001.desc
	theme = generic_intrigue_scheme

	left_portrait = {
        character = root
        animation = war_defender   
    }

    right_portrait = {
        character = scope:target_knight
        animation = aggressive_sword
    }

    lower_right_portrait = scope:target

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

    cooldown = { years = 10 }

    trigger = {
        scope:target = {
            any_knight = { 
                is_landed = no 
                count >= 1
                scope:scheme = { NOT = { scheme_is_character_agent = prev } }
            }
        }
    }

    immediate = {
        if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
        }
        scope:target = {
            ordered_knight = {
                limit = {
                    is_landed = no
                    scope:scheme = { NOT = { scheme_is_character_agent = prev } }
                }
                order_by = {
                    add = prowess
                    add = diplomacy
                }
                save_scope_as = target_knight
            }
        }
    }

    # Beat him
    option = {
        name = steal_herd_ongoing.1001.a

        duel = {
			desc = steal_herd_ongoing.1001.duel_desc
			skill = prowess
			target = scope:target_knight
			50 = {
				desc = steal_herd_ongoing.1001.a_win
               
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = steal_herd_ongoing.1001.a_win
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target_knight
					scope:scheme = {
                        add_scheme_modifier = { type = mpo_steal_herd_observation_modifier }
                    }
				}
			}
			50 = {
				desc = steal_herd_ongoing.1001.lose
                modifier = { # He does not even like bro
                    add = 10
                    scope:target_knight = {
                        opinion = {
                            target = scope:target
                            value <= 0 
                        }
                    }
                }
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = steal_herd_ongoing.1001.lose
					type = event_toast_effect_bad
					left_icon = root
					right_icon = scope:target_knight
                    scope:scheme = {
                        add_random_negative_scheme_modifier_effect = yes
                    }
                    random = {
                        chance = 10
                        increase_wounds_effect = { REASON = fight }
                    }
				}
			}
		}

        stress_impact = {
            craven = minor_stress_impact_gain    
            compassionate = minor_stress_impact_gain
            fickle = minor_stress_impact_loss
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_energy = 0.5
            }
            modifier = {
                factor = 1.5
                highest_skill = martial
            }
        }
    }

    # Glaze target
    option = {
        name = steal_herd_ongoing.1001.b

        duel = {
			desc = steal_herd_ongoing.1001.duel_desc
			skill = diplomacy
			target = scope:target_knight
			50 = {
				desc = steal_herd_ongoing.1001.b_win
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = steal_herd_ongoing.1001.b_win
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target_knight
					scope:scheme = {
                        add_scheme_modifier = { type = mpo_steal_herd_observation_modifier }
                    }
				}
			}
			50 = {
				desc = steal_herd_ongoing.1001.lose
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = steal_herd_ongoing.1001.lose
					type = event_toast_effect_bad
					left_icon = root
					right_icon = scope:target_knight
                    scope:scheme = {
                        add_random_negative_scheme_modifier_effect = yes
                    }
				}
			}
		}

        stress_impact = {
            arrogant = minor_stress_impact_gain    
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_energy = 0.25
                ai_sociability = 0.5
            }
            modifier = {
                factor = 1.5
                highest_skill = diplomacy
            }
        }
    }

    # Offer him a drizzank
    option = {
        name = steal_herd_ongoing.1001.c
        trigger = {
            short_term_gold >= minor_gold_value
        }

        scope:scheme = {
            random_scheme_agent_slot = {
                limit = {
                    is_filled = no
                }
                save_scope_as = agent_slot
            }
        }

        remove_short_term_gold = minor_gold_value

        random_list = {
            10 = {
                trigger = {
                    exists = scope:agent_slot
                    scope:target_knight = { is_valid_as_agent_in_slot = scope:agent_slot }
                }
                modifier = { # He does not even like bro
                    add = 15
                    scope:target_knight = {
                        opinion = {
                            target = scope:target
                            value <= 0 
                        }
                    }
                }
                modifier = {
                    add = 20
                    scope:target_knight = {
                        OR = {
                            has_trait = drunkard
                            has_trait = gregarious
                        }
                    }
                }
                show_chance = no
                desc = steal_herd_ongoing.1001.c_win_big
                send_interface_toast = {
					title = steal_herd_ongoing.1001.c_win_big
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target_knight
					scope:target_knight = {
                        force_add_to_agent_slot = {
                            agent_slot = scope:agent_slot
                            years = 1
                        }
                    }
				}
                
            }
            40 = {
                modifier = {
                    add = 30
                    scope:target_knight = {
                        OR = {
                            has_trait = drunkard
                            has_trait = gregarious
                        }
                    }
                }
                show_chance = no
                desc = steal_herd_ongoing.1001.c_win
                send_interface_toast = {
					title = steal_herd_ongoing.1001.c_win
					type = event_toast_effect_good
					left_icon = root
					right_icon = scope:target_knight
					scope:scheme = {
                        add_scheme_modifier = { type = mpo_steal_herd_friend_modifier }
                    }
				}
            }
            20 = {
                show_chance = no
                desc = steal_herd_ongoing.1001.lose
                send_interface_toast = {
					title = steal_herd_ongoing.1001.lose
					type = event_toast_effect_bad
					left_icon = root
					right_icon = scope:target_knight
                    scope:scheme = {
                        add_random_negative_scheme_modifier_effect = yes
                    }
				}
            }
        }

        stress_impact = {
            greedy = minor_stress_impact_gain    
            gregarious = minor_stress_impact_loss
            drunkard = minor_stress_impact_loss
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_energy = 0.25
                ai_sociability = 1
                ai_greed = -0.5
            }
            modifier = {
                factor = 1.5
                highest_skill = diplomacy
            }
        }
    }

    option = { #do nothing
		name = steal_herd_ongoing.1001.d
		
		ai_chance = {
			base = 10
		}
	}
}

#Send someone as a herder to offering services
steal_herd_ongoing.1002 = {
    type = character_event
	title = steal_herd_ongoing.1002.t
	desc = steal_herd_ongoing.1002.desc
	theme = generic_intrigue_scheme

	left_portrait = {
        character = root
        animation = thinking   
    }

    right_portrait = {
        character = scope:chosen_agent
        animation = stress
    }

    lower_right_portrait = scope:target

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

    cooldown = { years = 5 }
 
    trigger = {
        scope:scheme ?= { any_scheme_agent_character = { count >= 1 } }
    }

    immediate = {
        if = {
            limit = {
                NOT = { exists = scope:scheme }
            }
            random_scheme = {
                limit = {
                    scheme_type = steal_herd
                }
                save_scope_as = scheme
            }
            scope:scheme = {
                scheme_target_character = { save_scope_as = target }
            }
        }
        scope:scheme = {
            ordered_scheme_agent_character = {
                order_by = intrigue
                save_scope_as = chosen_agent
            }
        }
    }

    # Send the agent as is
    option = {
        name = steal_herd_ongoing.1002.a
        scope:chosen_agent = {
            duel = {
                desc = steal_herd_ongoing.1002.duel_desc
                skills = { intrigue learning }
                value = decent_skill_rating
                50 = {
                    desc = steal_herd_ongoing.1002.win
                    compare_modifier = {
                        value = scope:duel_value
                        multiplier = 3.5
                        min = -49
                    }
                    root = {
                        send_interface_toast = {
                            title = steal_herd_ongoing.1002.win
                            type = event_toast_effect_good
                            left_icon = scope:chosen_agent
                            right_icon = root
                            scope:scheme = {
                                add_scheme_modifier = { type = mpo_steal_herd_shepherd_modifier }
                            }
                        }
                    }
                }
                50 = {
                    desc = steal_herd_ongoing.1002.lose
                    compare_modifier = {
                        value = scope:duel_value
                        multiplier = -3.5
                        min = -49
                    }
                    root = {
                        send_interface_toast = {
                            title = steal_herd_ongoing.1002.lose
                            type = event_toast_effect_bad
                            left_icon = scope:chosen_agent
                            right_icon = root
                            scope:scheme = {
                                add_random_negative_scheme_modifier_effect = yes
                            }
                        }
                    }
                }
            }
        }

        stress_impact = {
            deceitful = minor_stress_impact_loss    
        }

        ai_chance = {
			base = 50
		}
    }

    # Teach them shepherding methods
    option = {
        name = steal_herd_ongoing.1002.b
        trigger = {
            learning >= high_skill_rating
        }
        show_as_unavailable = { always = yes }
        custom_tooltip = steal_herd_ongoing.1002.b_tt

        stress_impact = {
            diligent = minor_stress_impact_loss    
        }

        scope:scheme = {
            change_opportunities = 2
        }

        ai_chance = {
			base = 100
		}
    }

    # Don't send them
    option = {
        name = steal_herd_ongoing.1002.c

        ai_chance = {
			base = 10
		}
    }
}
