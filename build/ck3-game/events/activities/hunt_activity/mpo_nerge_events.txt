namespace = mpo_nerge

###################################
# Setup & Maintenance Events
###################################
# Start Events - 0005 - 0100
# mpo_nerge.0005 - Setup for Beginning Events
# mpo_nerge.0010 - Regular Start - Host
# mpo_nerge.0015 - Regular Start - Guest
###################################
# Outcome Events - 0105 - 0200
# mpo_nerge.0105 - Setup for Outcome Events
# mpo_nerge.0110 - Unimpressive Outcome
# mpo_nerge.0115 - Regular Outcome
# mpo_nerge.0120 - Impressive Outcome
# mpo_nerge.0125 - Great Outcome
# mpo_nerge.0130 - Fantastic Outcome
###################################
# Ongoing Events - 1000 - 2000
# mpo_nerge.1000 - Your eagle brings the pelt of an animal
# mpo_nerge.1005 - A guest is not impressed with the hunt (Host)
# mpo_nerge.1010 - Someone rides too far ahead and scares the animals
# mpo_nerge.1015 - Some animals stampede towards the group (Host)
# mpo_nerge.1020 - The master of the hunt warns there aren't many animals left (Host)
# mpo_nerge.1025 - Arguments break out over the spoils (Host)
# mpo_nerge.1030 - A rare animal and their young are spotted
# mpo_nerge.1035 - Hunters suggest a new tactic to catch the animals
# mpo_nerge.1040 - Hunter finds a bow among the bushes
# mpo_nerge.1050 - Animal gets on the way, hunters try to get them
# mpo_nerge.1060 - Delicious animals get on the way, get them

# Beginning Events
mpo_nerge.0005 = { 
	hidden = yes

	immediate = {
		court_position:master_of_hunt_court_position ?= {
			save_scope_as = master_of_hunt
		}
		trigger_event = {
			id = mpo_nerge.0010
		}
		scope:activity = {
			every_attending_character = {
				limit = {
					NOT = { this = scope:host }	
				}
				trigger_event = {
					id = mpo_nerge.0015
				}
			}
		}
	}
}

mpo_nerge.0010 = { # Regular Nerge Start - Host
	type = activity_event
	title = mpo_nerge.0010.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:master_of_hunt
				}
				desc = mpo_nerge.0010.desc.intro.master_of_hunt
			}
			desc = mpo_nerge.0010.desc.intro
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = maimed
						has_trait = infirm
						has_trait = incapable
						has_trait = blind
					}
					exists = scope:master_of_hunt
				}
				desc = mpo_nerge.0010.desc.outro.alt.moh
			}
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = maimed
						has_trait = infirm
						has_trait = incapable
						has_trait = blind
					}
				}
				desc = mpo_nerge.0010.desc.outro.alt
			}
			desc = mpo_nerge.0010.desc.outro
		}
	}
	theme = hunt_activity
	left_portrait = {
		character = scope:master_of_hunt
		animation = horse_conversing_right
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	option = {
		name = mpo_nerge.0010.a
		if = {
			limit = {
				is_ai = yes
			}
			nerge_progression_large_effect = yes
			random = {
				chance = 10
				nerge_progression_large_effect = yes
			}
			random = {
				chance = 10
				nerge_progression_medium_effect = yes
			}
			random = {
				chance = 10
				nerge_progression_small_effect = yes
			}
		}
		else = {
			nerge_progression_tiny_effect = yes
		}
	}
}

mpo_nerge.0015 = { # Regular Nerge Start - Guest
	type = activity_event
	title = mpo_nerge.0015.t
	desc = mpo_nerge.0015.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = horse_sword_shield
		camera = camera_event_horse_left_forward
	}
	right_portrait = {
		character = scope:host
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	option = {
		name = mpo_nerge.0015.a
	}
}

# Outcome Events
mpo_nerge.0105 = {
	hidden = yes
	
	trigger = {
		exists = scope:activity
	}

	immediate = {
		scope:activity = {
			activity_location = { save_scope_as = nerge_location }
			if = {
				limit = {
					var:activity_special_type_progression >= 25
				}
				every_attending_character = {
					limit = {
						has_activity_intent = successful_nerge_intent
					}
					complete_activity_intent = yes
				}
			}
			if = {
				limit = {
					var:activity_special_type_progression < 25
				}
				every_attending_character = {
					trigger_event = {
						id = mpo_nerge.0110
					}
				}
			}
			else_if = {
				limit = {
					var:activity_special_type_progression < 50
				}
				every_attending_character = {
					trigger_event = {
						id = mpo_nerge.0115
					}
				}
			}
			else_if = {
				limit = {
					var:activity_special_type_progression < 75
				}
				every_attending_character = {
					trigger_event = {
						id = mpo_nerge.0120
					}
				}
			}
			else_if = {
				limit = {
					var:activity_special_type_progression < 100
				}
				every_attending_character = {
					trigger_event = {
						id = mpo_nerge.0125
					}
				}
			}
			else_if = {
				limit = {
					var:activity_special_type_progression >= 100
				}
				every_attending_character = {
					trigger_event = {
						id = mpo_nerge.0130
					}
				}
			}
		}
	}
}

mpo_nerge.0110 = { # Unimpressive Outcome
	type = activity_event
	title = mpo_nerge.0110.t
	desc = mpo_nerge.0110.desc
	theme = hunt_activity
	right_portrait = {
		character = root
		animation = jockey_loss
		camera = camera_event_horse_left
	}

	immediate = {
		hand_out_nerge_rewards = { OUTCOME = unimpressive }
	}

	option = {
		name = mpo_nerge.0110.a
	}
}

mpo_nerge.0115 = { # Regular Outcome
	type = activity_event
	title = mpo_nerge.0115.t
	desc = mpo_nerge.0115.desc
	theme = hunt_activity
	right_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	immediate = {
		hand_out_nerge_rewards = { OUTCOME = regular }
	}

	option = {
		name = mpo_nerge.0115.a
	}
}

mpo_nerge.0120 = { # Impressive Outcome
	type = activity_event
	title = mpo_nerge.0120.t
	desc = mpo_nerge.0120.desc
	theme = hunt_activity
	right_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	immediate = {
		hand_out_nerge_rewards = { OUTCOME = impressive }
	}

	option = {
		name = mpo_nerge.0120.a
		if = {
			limit = {
				root = scope:host
			}
			nerge_commander_trait_effect = yes
		}
	}
}

mpo_nerge.0125 = { # Great Outcome
	type = activity_event
	title = mpo_nerge.0125.t
	desc = mpo_nerge.0125.desc
	theme = hunt_activity
	right_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	immediate = {
		hand_out_nerge_rewards = { OUTCOME = great }
	}

	option = {
		name = mpo_nerge.0125.a
		if = {
			limit = {
				is_ai = no
			}
			nerge_commander_trait_effect = yes
		}
		else = {
			random = {
				chance = 15
				nerge_commander_trait_effect = yes
			}
		}
	}
}

mpo_nerge.0130 = { # Fantastic Outcome
	type = activity_event
	title = mpo_nerge.0130.t
	desc = mpo_nerge.0130.desc
	theme = hunt_activity
	right_portrait = {
		character = root
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}

	immediate = {
		hand_out_nerge_rewards = { OUTCOME = fantastic }
	}

	option = {
		name = mpo_nerge.0130.a
		if = {
			limit = {
				is_ai = no
			}
			nerge_commander_trait_effect = yes
		}
		else = {
			random = {
				chance = 30
				nerge_commander_trait_effect = yes
			}
		}
	}
}

### Ongoing Events ###

#######################
# Your eagle brings the pelt of an animal
#######################

mpo_nerge.1000 = {
	type = activity_event
	title = mpo_nerge.1000.t
	desc = mpo_nerge.1000.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {	has_trait = paranoid }
			animation = paranoia
		}
		animation = hunting_falcon #TODO_MPO change to eagle
	}
	cooldown = { years = 1 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		has_eagle_trigger = yes
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
	}

	option = { # A sure sign, follow him!
		name = mpo_nerge.1000.a

		random_list = {
			50 = {
				desc = mpo_nerge.1000.a.tt.success
				modifier = {
					add = 15
					has_variable = eagle_personality_trait_2
				}
				modifier = {
					add = 10
					has_character_modifier = brave_eagle_story_modifier
				}
				modifier = {
					add = 15
					has_character_modifier = cunning_eagle_story_modifier
				}
				modifier = {
					add = 5
					has_trait_xp = {
						trait = lifestyle_hunter
						track = falconer
						value >= 50
					}
				}
				modifier = {
					add = 5
					has_trait_xp = {
						trait = lifestyle_hunter
						track = falconer
						value >= 25
					}
				}
				modifier = {
					add = 5
					has_trait_xp = {
						trait = lifestyle_hunter
						track = falconer
						value >= 1
					}
				}
				modifier = {
					add = 10
					has_trait = lifestyle_hunter
				}
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1000.a.tt.success
					nerge_progression_large_effect = yes
				}
				random = {
					chance = 75
					if = {
						limit = {
							NOT = { has_variable = eagle_personality_trait }
						}
						show_as_tooltip = { add_character_modifier = cunning_eagle_story_modifier }
						hidden_effect = {
							set_eagle_personality_trait_effect = { TRAIT = cunning ADD_MODIFIER = yes }
						}
					}
				}
			}
			50 = {
				modifier = {
					add = 10
					has_character_modifier = weak_eagle_modifier
				}
				modifier = {
					add = 15
					has_character_modifier = very_weak_eagle_modifier
				}
				desc = mpo_nerge.1000.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1000.a.tt.failure
					add_stress = miniscule_stress_gain
				}
			}
		}

		if = {
			limit = {
				NOT = { has_trait = lifestyle_hunter }
			}
			add_trait = lifestyle_hunter
		}

		add_trait_xp = {
			trait = lifestyle_hunter
			track = falconer
			value = medium_trait_xp
		}

		stress_impact = {
			trusting = medium_stress_impact_loss
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 1.5
				has_trait = brave
			}
			modifier = {
				factor = 2
				has_trait = trusting
			}
			modifier = {
				factor = 0
				has_trait = craven
			}
		}
	}

	option = { # Send a few trusted riders to investigate.
		name = mpo_nerge.1000.b

		duel = {
			skill = intrigue
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1000.b.tt.success
				send_interface_toast = {
					title = mpo_nerge.1000.b.tt.success
					type = event_toast_effect_good
					nerge_progression_medium_effect = yes
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1000.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1000.a.tt.failure
					add_stress = miniscule_stress_gain
				}
			}
		}

		stress_impact = {
			ambitious = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				intrigue >= decent_skill_rating
			}
		}
	}
	
	option = { # Ignore it, stay focused on the main hed.
		name = mpo_nerge.1000.c

		nerge_progression_tiny_effect = yes

		random = {
			chance = 10
			if = {
				limit = {
					NOT = { has_variable = eagle_personality_trait }
				}
				show_as_tooltip = { add_character_modifier = cunning_eagle_story_modifier }
				hidden_effect = {
					set_eagle_personality_trait_effect = { TRAIT = cunning ADD_MODIFIER = yes }
				}
			}
		}

		ai_chance = {
			base = 75
			modifier = {
				factor = 2
				OR = {
					has_trait = paranoid
					has_trait = lazy
					has_trait = content
				}
			}
		}
	}
}

#######################
# A guest is not impressed with the hunt
#######################

mpo_nerge.1005 = {
	type = activity_event
	title = mpo_nerge.1005.t
	desc = mpo_nerge.1005.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = personality_honorable 
	}
	right_portrait = {
		character = scope:dissenter
		animation = personality_vengeful 
	}
	override_background = { reference = wilderness_activity }
	cooldown = { years = 1 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		this = involved_activity.activity_host
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				this != root
			}
		}
	}

	immediate = {
		involved_activity = {
			save_scope_as = activity
			random_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
				}
				weight = {
					base = 5
					modifier = {
						add = 3 
						has_trait = arrogant
					}
					modifier = {
						add = 1
						NOT = { is_obedient_to = root }
					}
					modifier = {
						add = 3 
						root = {
							intent_target ?= prev
						}
					}
					modifier = {
						add = 35
						opinion = {
							value <= low_negative_opinion
							target = root
						}
					}
				}
				save_scope_as = dissenter
			}
		}
	}

	option = { # Then watch this
		name = mpo_nerge.1005.a
		duel = {
			skill = prowess
			desc = mpo_nerge.1005.a.tt
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1005.a.tt.success
				send_interface_toast = {
					title = mpo_nerge.1005.a.tt.success
					type = event_toast_effect_good
					nerge_progression_large_effect = yes
					add_prestige = minor_prestige_gain
					if = {
						limit = {
							scope:dissenter = {
								NOT = { is_obedient_to = root }
								OR = {
									is_tributary_of = root
									is_vassal_of = root
									is_courtier_of = root
								}
							}
						}
						scope:dissenter = {
							add_opinion = {
								modifier = obedience_opinion
								target = root
								years = 5
							}
						}
						if = {
							limit = {
								has_activity_intent = impose_obedience_intent
								intent_target ?= scope:dissenter
							}
							complete_activity_intent = yes
						}
					}
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1005.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1005.a.tt.failure
				}
			}
		}

		stress_impact = {
			arrogant = minor_stress_impact_loss
		}

		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				prowess > decent_skill_rating
			}
			modifier = {
				factor = 2
				has_trait = arrogant
			}
			modifier = {
				factor = 1.5
				has_activity_intent = impose_obedience_intent
				intent_target ?= scope:dissenter
			}
		}
	}

	option = { # You should take the lead then.
		name = mpo_nerge.1005.b

		scope:dissenter = {
			duel = {
				skill = martial
				value = decent_skill_rating
				desc = mpo_nerge.1005.b.tt
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					min = 5
					desc = mpo_nerge.1005.b.tt.success
					root = {
						send_interface_toast = {
							title = mpo_nerge.1005.b.tt.success
							type = event_toast_effect_good
							nerge_progression_medium_effect = yes
						}
					}
				}
				50 = { 
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 5
					desc = mpo_nerge.1005.b.tt.failure
					root = {
						send_interface_toast = {
							type = event_toast_effect_bad
							title = mpo_nerge.1005.b.tt.failure
							add_dread = medium_dread_gain
							scope:dissenter = { add_stress = medium_stress_gain }
							if = {
								limit = {
									has_activity_intent = dreadful_nerge_intent
								}
								complete_activity_intent = yes
							}
						}
					}
				}
			}
		}

		stress_impact = {
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_vengefulness = 1
			}
			modifier = {
				factor = 0
				has_trait = arrogant
			}
			modifier = {
				factor = 1.5
				has_activity_intent = dreadful_nerge_intent
			}
		}
	}

	option = { # Okay I don't care
		name = mpo_nerge.1005.c

		stress_impact = {
			base = minor_stress_impact_loss
			humble = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
		}

		nerge_progression_tiny_effect = yes

		scope:dissenter = {
			add_opinion = {
				target = root
				modifier = insult_opinion
				opinion = -10
			}
		}
		
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = humble
			}
			modifier = {
				factor = 0
				has_trait = arrogant
			}
		}
	}
}

#######################
# Someone runs out of formation and scares the animals
#######################

mpo_nerge.1010 = {
	type = activity_event
	title = mpo_nerge.1010.t
	desc = mpo_nerge.1010.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = horse_exhausted
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:chaser
		animation = jockey_gallop
		camera = camera_event_horse_left
	}
	cooldown = { years = 1 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				is_ai = yes
				this != root
				NOR = {
					is_vassal_of = root 
					is_tributary_of = root
				}
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 5
			OR = {
				has_activity_intent = dreadful_nerge_intent
				has_activity_intent = impose_obedience_intent
			}
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			random_attending_character = {
				limit = { 
					this != root
					is_adult = yes
					is_alive = yes
					is_ai = yes
					NOR = {
						is_vassal_of = root 
						is_tributary_of = root
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 3 
						culture != root.culture
					}
					modifier = {
						add = 2 
						NOT = { is_obedient_to = root }
					}
					modifier = {
						add = 10
						root = {
							intent_target ?= prev
						}
					}
					modifier = {
						add = 2 
						NOT = { is_close_or_extended_family_of = root }
					}
				}
				save_scope_as = chaser
				hunt_wound_select_effect = yes
			}
		}
	}

	option = { # Abandon him
		name = mpo_nerge.1010.a

		add_dread = major_dread_gain

		scope:chaser = {
			random_list = {
				50 = {
					show_chance = no
					desc = mpo_nerge.1010.a.tt.injury
					add_opinion = {
						modifier = abandoned_me_opinion
						target = root
					}
					root = {
						send_interface_toast = {
							type = event_toast_effect_neutral
							title = mpo_nerge.1010.a.tt.injury
							left_icon = scope:chaser
							scope:chaser = { increase_wounds_effect = { REASON = hunting_accident } }
						}
					}
				}
				50 = {
					show_chance = no
					desc = mpo_nerge.1010.a.tt.death
					root = {
						send_interface_toast = {
							type = event_toast_effect_neutral
							title = mpo_nerge.1010.a.tt.death
							left_icon = scope:chaser
							if = {
								limit = {
									has_activity_intent = murder_attendee_intent
									intent_target ?= scope:chaser
								}
								scope:chaser = { death = { death_reason = death_trampled } }
								complete_activity_intent = yes
							}
							else = {
								scope:chaser = { increase_wounds_effect = { REASON = trampled_by_horse } apply_maimed_trait_and_modifier_effect = yes }
							}
						}
					}
				}
			}
		}

		if = {
			limit = {
				has_activity_intent = dreadful_nerge_intent
			}
			complete_activity_intent = yes
		}

		stress_impact = {
			compassionate = major_stress_impact_gain
			callous = major_stress_impact_loss
			vengeful = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_vengefulness = 1
				ai_compassion = -1
			}
			opinion_modifier = {
				opinion_target = scope:chaser
				multiplier = -0.5
			}
			modifier = {
				factor = 1.5
				intent_target ?= scope:chaser
			}
		}
	}

	option = { # Try and scavenge what you can
		name = mpo_nerge.1010.b

		if = {
			limit = {
				government_has_flag = government_is_nomadic
				exists = domicile
			}
			domicile = {
				change_herd = -50
			}
		}

		duel = {
			skill = stewardship
			value = decent_skill_rating
			60 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = 10
					OR = {
						has_trait = organizer
						has_trait = logistician
					}
				}
				min = 5
				desc = mpo_nerge.1010.b.tt.success
				send_interface_toast = {
					title = mpo_nerge.1010.b.tt.success
					type = event_toast_effect_good
					nerge_progression_medium_effect = yes
				}
			}
			40 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1010.b.tt.failure
				send_interface_toast = {
					type = event_toast_effect_neutral
					title = mpo_nerge.1010.b.tt.failure
					nerge_progression_small_effect = yes
				}
			}
		}

		stress_impact = {
			greedy = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
			}
		}
	}

	option = { # It's okay
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							has_activity_intent = impose_obedience_intent
							intent_target ?= scope:chaser
						}
						desc = mpo_nerge.1010.c_obedience
					}
					desc = mpo_nerge.1010.c
				}
			}
		}
		
		if = {
			limit = {
				has_activity_intent = impose_obedience_intent
				intent_target ?= scope:chaser
			}
			complete_activity_intent = yes
			scope:chaser = {
				add_opinion = {
					modifier = obedience_opinion
					target = root
					years = 5
				}
			}
		}
		else = {
			scope:chaser = {
				add_opinion = {
					modifier = grateful_opinion
					target = root
					opinion = 15
				}
			}
			add_dread = miniscule_dread_loss
		}

		if = {
			limit = {
				scope:chaser.culture != root.culture
			}
			culture = {
				change_cultural_acceptance = {
					target = scope:chaser.culture
					value = miniscule_cultural_acceptance_gain
					desc = cultural_acceptance_gain_event
				}
			}
		}

		stress_impact = {
			forgiving = minor_stress_impact_loss
			content = miniscule_stress_impact_loss
			compassionate = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_vengefulness = -1
				ai_compassion = 1
			}
			opinion_modifier = {
				opinion_target = scope:chaser
				multiplier = 0.5
			}
			modifier = {
				factor = 2
				has_activity_intent = impose_obedience_intent
				intent_target ?= scope:chaser
			}
		}
	}
}

#######################
# Animals charge towards the group
#######################

mpo_nerge.1015 = {
	type = activity_event
	title = mpo_nerge.1015.t
	desc = mpo_nerge.1015.desc
	theme = hunt_activity
	left_portrait = {
		character = scope:hunter_1
		animation = jockey_gallop
		camera = camera_event_horse_left
	}
	center_portrait = {
		character = scope:hunter_2
		animation = jockey_gallop
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = root
		animation = jockey_gallop
		camera = camera_event_horse_right
	}
	cooldown = { years = 1 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		this = involved_activity.activity_host
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				this != root
				count >= 2
			}
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			random_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
				}
				save_scope_as = hunter_1
			}
			random_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
					this != scope:hunter_1 
				}
				save_scope_as = hunter_2
			}
		}
	}

	option = { # Fight back
		name = mpo_nerge.1015.a

		duel = {
			skill = martial
			value = decent_skill_rating
			30 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = scope:hunter_1.martial
				}
				modifier = {
					always = yes 
					add = scope:hunter_2.martial
				}
				min = 5
				desc = mpo_nerge.1015.a.tt.success
				send_interface_toast = {
					title = mpo_nerge.1015.a.tt.success
					type = event_toast_effect_good
					add_prestige = miniscule_prestige_gain
					nerge_progression_large_effect = yes
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1015.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1015.a.tt.failure
					add_prestige = miniscule_prestige_loss
					random = {
						chance = 25 
						increase_wounds_effect = { REASON = hunting_accident } 
						scope:hunter_1 = { increase_wounds_effect = { REASON = hunting_accident } }
						scope:hunter_2 = { increase_wounds_effect = { REASON = hunting_accident } }
					}
				}
			}
		}

		stress_impact = {
			brave = minor_stress_impact_loss
			craven = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = 1
			}
			modifier = {
				add = 10
				OR = {
					scope:hunter_1.martial > decent_skill_rating
					scope:hunter_2.martial > decent_skill_rating
				}
			}
			modifier = {
				factor = 2
				has_trait = brave
			}
			modifier = {
				factor = 0
				has_trait = craven
			}
		}
	}

	option = { # Try and get a few animals
		name = mpo_nerge.1015.b

		nerge_progression_medium_effect = yes

		random = {
			chance = 25
			domicile ?= { change_herd = 75 }
		}

		stress_impact = {
			content = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
			}
			modifier = {
				factor = 2
				has_trait = craven
			}
		}
	}

	option = { # Let them pass
		name = mpo_nerge.1015.c

		add_piety = minor_piety_gain

		location.county = { change_county_fertility = minor_county_fertility_gain }

		stress_impact = {
			compassionate = minor_stress_impact_loss
			content = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 1.5
				has_trait = content
			}
			modifier = {
				factor = 2
				has_trait = compassionate
			}
			modifier = {
				factor = 2
				location.county.county_fertility < bad_county_fertility_level
			}
		}
	}

	option = { # Punish the riders
		name = mpo_nerge.1015.d

		add_dread = medium_dread_gain

		if = {
			limit = {
				has_activity_intent = dreadful_nerge_intent
			}
			complete_activity_intent = yes
		}

		scope:hunter_1 = {
			progress_towards_rival_effect = {
				REASON = rival_humiliated_at_nerge
				CHARACTER = root
				OPINION = default_rival_opinion
			}
			if = {
				limit = {
					exists = scope:hunter_1.domicile 
					scope:hunter_1.domicile.herd > domicile.minor_herd_value
				}
				pay_herd = {
					target = root
					value = domicile.minor_herd_value
				}
			}
			else = {
				root = {
					add_hook_no_toast = { type = favor_hook target = scope:hunter_1 }
				}
			}
  		}

		scope:hunter_2 = {
			progress_towards_rival_effect = {
				REASON = rival_humiliated_at_nerge
				CHARACTER = root
				OPINION = default_rival_opinion
			}
			if = {
				limit = {
					exists = scope:hunter_2.domicile 
					scope:hunter_2.domicile.herd > domicile.minor_herd_value
				}
				pay_herd = {
					target = root
					value = domicile.minor_herd_value
				}
			}
			else = {
				root = {
					add_hook_no_toast = { type = favor_hook target = scope:hunter_2 }
				}
			}
  		}

		stress_impact = {
			compassionate = minor_stress_impact_gain
			callous = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_vengefulness = 1
				ai_compassion = -1
			}
			modifier = {
				factor = -1
				OR = {
					has_trait = compassionate
					has_trait = gregarious
				}
			}
			modifier = {
				factor = 2
				has_activity_intent = dreadful_nerge_intent
			}
			opinion_modifier = {
				opinion_target = scope:hunter_1
				multiplier = -0.5
			}
			opinion_modifier = {
				opinion_target = scope:hunter_2
				multiplier = -0.5
			}
		}
	}
}

#######################
# The master of the hunt warns there aren't many animals left
#######################

mpo_nerge.1020 = {
	type = activity_event
	title = mpo_nerge.1020.t
	desc = mpo_nerge.1020.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = jockey_walk
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:master_of_hunt
		animation = jockey_walk
		camera = camera_event_horse_right
	}
	cooldown = { years = 1 }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		this = involved_activity.activity_host
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				has_court_position = master_of_hunt_court_position
			}
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		court_position:master_of_hunt_court_position ?= {
			save_scope_as = master_of_hunt
		}
	}

	option = { # Only hunt what we need 
		name = mpo_nerge.1020.a
		custom_tooltip = mpo_nerge.1020.a.tt

		nerge_progression_tiny_effect = yes

		stress_impact = {
			greedy = minor_stress_impact_gain
			temperate = minor_stress_impact_loss
			content = minor_stress_impact_loss
		}

		scope:master_of_hunt = {
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 10
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = -1
			}
			modifier = {
				factor = 2
				OR = {
					has_trait = content
					has_trait = compassionate
					has_trait = temperate
				}
			}
		}
	}

	option = { # Doesn't matter, kill them all
		name = mpo_nerge.1020.b

		location.county = { 
			change_county_fertility = miniscule_county_fertility_loss
			add_county_modifier = {
				modifier = mpo_nerge_overhunting_modifier
				years = 2
			}
		}
		nerge_progression_small_effect = yes

		stress_impact = {
			greedy = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			content = minor_stress_impact_gain
		}

		add_dread = medium_dread_gain

		if = {
			limit = {
				has_activity_intent = dreadful_nerge_intent
			}
			complete_activity_intent = yes
		}

		scope:master_of_hunt = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -15
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 1
			}
			modifier = {
				factor = 2
				has_trait = callous
			}
			modifier = {
				factor = 2
				has_activity_intent = dreadful_nerge_intent
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = compassionate
					has_trait = temperate
				}
			}
		}
	}

	option = { # Hunt selectively
		name = mpo_nerge.1020.c
		
		duel = {
			skill = learning
			value = decent_skill_rating
			desc = mpo_nerge.1020.c.tt
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = 10 
					has_trait = lifestyle_mystic
				}
				min = 5
				desc = mpo_nerge.1020.c.tt.success
				send_interface_toast = {
					title = mpo_nerge.1020.c.tt.success
					type = event_toast_effect_good
					scope:master_of_hunt = {
						add_opinion = {
							target = root
							modifier = pleased_opinion
							opinion = 10
						}
					}
					nerge_progression_medium_effect = yes
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1020.c.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1020.c.tt.failure
					location.county = { 
						change_county_fertility = miniscule_county_fertility_loss
						add_county_modifier = {
							modifier = mpo_nerge_overhunting_modifier
							years = 2
						}
					}
				}
			}
		}

		stress_impact = {
			greedy = minor_stress_impact_gain
			temperate = minor_stress_impact_loss
			lifestyle_mystic = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_greed = -1
			}
			modifier = {
				factor = 2
				OR = {
					learning > decent_skill_rating
					has_trait = lifestyle_mystic
				}
			}
		}
	}
}

#######################
# Arguments break out over the spoils
#######################

mpo_nerge.1025 = {
	type = activity_event
	title = mpo_nerge.1025.t
	desc = mpo_nerge.1025.desc
	theme = hunt_activity
	left_portrait = {
		character = scope:hunter_1
		animation = jockey_walk
		camera = camera_event_horse_left 
	}
	center_portrait = {
		character = scope:hunter_2
		animation = jockey_walk
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = root
		animation = jockey_walk
		camera = camera_event_horse_right
	}
	cooldown = { years = 1 }
	override_background = { reference = army_camp }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		this = involved_activity.activity_host
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				this != root
				count >= 2
			}
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			random_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
				}
				weight = {
					base = 5
					modifier = {
						add = 1
						has_trait = arrogant
					}
					modifier = {
						add = 3
						root = {
							intent_target ?= prev
						}
					}
				}
				save_scope_as = hunter_1
			}
			random_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
					this != scope:hunter_1 
				}
				weight = {
					base = 5
					modifier = {
						add = 1
						has_trait = arrogant
					}
					modifier = {
						add = 3
						root = {
							intent_target ?= prev
						}
					}
				}
				save_scope_as = hunter_2
			}
		}
		if = {
			limit = {
				exists = intent_target 
			}
			intent_target = { save_scope_as = intent_target }
		}
	}

	option = { # I will make a feast
		name = mpo_nerge.1025.a
		flavor = mpo_nerge.1025.a.flavor
		custom_tooltip = mpo_nerge.1025.a.tt

		add_character_modifier = {
			modifier = mpo_nerge_feast_discount
			days = 366
		}

		trigger_event = {
			id = mpo_nerge.1026
			years = 1
		}

		stress_impact = {
			compassionate = minor_stress_impact_loss
			gregarious = medium_stress_impact_loss
			gluttonous = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = -1
				ai_rationality = 1
			}
			modifier = {
				factor = 2
				has_trait = gregarious
			}
		}
	}

	option = { # Fight for it
		name = mpo_nerge.1025.b

		add_dread = minor_dread_gain

		if = {
			limit = {
				has_activity_intent = dreadful_nerge_intent
			}
			complete_activity_intent = yes
		}

		scope:hunter_1 = {
			duel = {
				skill = prowess
				target = scope:hunter_2
				desc = mpo_nerge.1025.b.tt
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
					}
					min = 5
					desc = mpo_nerge.1025.b.tt.hunter_1
					root = {
						send_interface_toast = {
							title = mpo_nerge.1025.b.tt.hunter_1
							scope:hunter_1 = { add_prestige = minor_prestige_gain }
							type = event_toast_effect_neutral
							left_icon = scope:hunter_1
						}
					}
					scope:hunter_2 = {
						increase_wounds_effect = { REASON = fight }
						add_opinion = {
							target = root
							modifier = angry_opinion
							opinion = -30
						}
					}
				}
				50 = { 
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
					}
					min = 5
					desc = mpo_nerge.1025.b.tt.hunter_2
					root = {
						send_interface_toast = {
							title = mpo_nerge.1025.b.tt.hunter_2
							scope:hunter_2 = { add_prestige = minor_prestige_gain }
							type = event_toast_effect_neutral
							left_icon = scope:hunter_2
						}
					}
					scope:hunter_1 = {
						increase_wounds_effect = { REASON = fight }
						add_opinion = {
							target = root
							modifier = angry_opinion
							opinion = -30
						}
					}
				}
			}
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = callous
			}
			modifier = {
				factor = 0
				has_trait = compassionate
			}
			modifier = {
				factor = 2
				has_activity_intent = dreadful_nerge_intent
			}
		}
	}

	option = { # It's for me
		name = mpo_nerge.1025.c

		duel = {
			skill = intrigue
			value = decent_skill_rating
			desc = mpo_nerge.1025.c.tt
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = 10
					scope:hunter_1 = { has_trait = trusting }
				}
				modifier = {
					add = 10
					scope:hunter_2 = { has_trait = trusting }
				}
				min = 5
				desc = mpo_nerge.1025.c.tt.success
				send_interface_toast = {
					title = mpo_nerge.1025.c.tt.success
					add_dread = minor_dread_gain
					add_prestige = minor_prestige_gain
					type = event_toast_effect_good
				}
				scope:hunter_1 = {
					add_opinion = {
						target = root
						modifier = annoyed_opinion
						opinion = -15
					}
				}
				scope:hunter_2 = {
					add_opinion = {
						target = root
						modifier = annoyed_opinion
						opinion = -15
					}
				}
				if = {
					limit = {
						has_activity_intent = dreadful_nerge_intent
					}
					complete_activity_intent = yes
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1025.c.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1025.c.tt.failure
					add_stress = minor_stress_gain
				}
			}
		}

		stress_impact = {
			schemer = minor_stress_impact_loss
			honest = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = -1
			}
			modifier = {
				factor = 0
				has_trait = honest
			}
			modifier = {
				factor = 1.5
				has_activity_intent = dreadful_nerge_intent
			}
		}
	}

	option = { # Obey me and you will have it
		name = mpo_nerge.1025.d
		trigger = {
			has_activity_intent = impose_obedience_intent
			OR = {
				intent_target ?= scope:hunter_1
				intent_target ?= scope:hunter_2
			}
		}

		if = {
			limit = {
				has_activity_intent = impose_obedience_intent
			}
			complete_activity_intent = yes
			intent_target = {
				add_opinion = {
					modifier = obedience_opinion
					target = root
					years = 5
				}
			}
		}

		if = {
			limit = { intent_target = scope:hunter_1 }
			scope:hunter_2 = { add_opinion = { modifier = angry_opinion target = root opinion = -15 } }
		}
		else = {
			scope:hunter_1 = { add_opinion = { modifier = angry_opinion target = root opinion = -15 } }
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 1
			}
			modifier = {
				factor = 0
				has_trait = honest
			}
			modifier = {
				factor = 2
				has_activity_intent = impose_obedience_intent
				OR = {
					intent_target ?= scope:hunter_1
					intent_target ?= scope:hunter_2
				}
			}
		}
	}
}
	
# Follow up event 
mpo_nerge.1026 = {
	title = mpo_nerge.1026.t
	desc = mpo_nerge.1026.desc
	theme = realm
	type = character_event
	left_portrait = {
		character = root
		animation = sadness
	}

	trigger = {
		has_character_modifier = mpo_nerge_feast_discount
	}

	option = {
		name = mpo_nerge.1026.a
		remove_character_modifier = mpo_nerge_feast_discount
		add_prestige = medium_prestige_loss
		add_character_modifier = {
			modifier = mpo_nerge_promised_feast_failed
			years = 5
		}
	}
}

#######################
# Another animal and their young are spotted
#######################
mpo_nerge.1030 = {
	type = activity_event
	title = mpo_nerge.1030.t
	desc = mpo_nerge.1030.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = jockey_walk
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:master_of_hunt
		animation = jockey_walk
		camera = camera_event_horse_left
	}
	cooldown = { years = 1 }
	override_background = { reference = wilderness_activity }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		NOT = {
			any_realm_county = { has_county_modifier = hunt_sighting_legendary_modifier }
		}
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes
				this != root
			}
			activity_host ?= root
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 2
			has_trait = lifestyle_mystic
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			random_attending_character = {
				limit = {
					has_court_position = master_of_hunt_court_position
				}
				alternative_limit = { 
					is_adult = yes
					is_alive = yes
					this != root
				}
				save_scope_as = master_of_hunt
			}
		}
		location.county = { save_scope_as = county }
	}

	option = { # Slay it
		name = mpo_nerge.1030.a

		duel = {
			skills = { martial prowess }
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = 10
					has_trait = lifestyle_hunter
				}
				min = 5
				desc = mpo_nerge.1030.a.tt.success
				send_interface_toast = {
					title = mpo_nerge.1030.a.tt.success
					type = event_toast_effect_good
					nerge_progression_medium_effect = yes
					add_prestige = medium_prestige_gain
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1030.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1030.a.tt.failure
					increase_wounds_effect = { REASON = hunting_accident }
				}
			}
		}

		stress_impact = {
			brave = medium_stress_impact_loss
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = 1
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = wounded
				}
			}
		}
	}

	option = { # Track it
		name = mpo_nerge.1030.b

		duel = {
			skill = learning
			value = high_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					add = 10
					has_trait = lifestyle_mystic
				}
				min = 5
				desc = mpo_nerge.1030.b.tt.success
				send_interface_toast = {
					title = mpo_nerge.1030.b.tt.success
					type = event_toast_effect_good
					if = {
						limit = {
							has_trait = lifestyle_mystic
						}
						add_trait_xp = {
							trait = lifestyle_mystic
							value = lifestyle_mystic_xp_gain_minor_value
						}
					}
					else = {
						add_trait = lifestyle_mystic
					}
					trigger_event = {
						id = mpo_nerge.1031
						days = { 60 720 }
					}
					custom_tooltip = mpo_nerge.1030.b.tt.effect
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1030.b.tt.failure
				send_interface_toast = {
					type = event_toast_effect_neutral
					title = mpo_nerge.1030.b.tt.failure
					add_stress = minor_stress_loss
				}
			}
		}

		stress_impact = {
			compassionate = miniscule_stress_impact_loss
			content = medium_stress_impact_loss
			lifestyle_mystic = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
			}
			modifier = {
				factor = 2
				has_trait = lifestyle_mystic
			}
		}
	}

	option = { # Let it go
		name = mpo_nerge.1030.c
		
		scope:master_of_hunt = {
			add_opinion = {
				modifier = annoyed_opinion
				target = root
				opinion = -15
			}
		}

		nerge_progression_tiny_effect = yes

		stress_impact = {
			base = minor_stress_impact_loss
			lazy = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = -1
			}
			modifier = {
				factor = 2
				has_trait = lazy
			}
		}
	}
}

# Follow up event
mpo_nerge.1031 = {
	type = character_event
	hidden = yes 

	immediate = {
		scope:county ?= {
			if = {
				limit = {
					NOT = { has_county_modifier = hunt_sighting_legendary_modifier }
				}
				root = {
					send_interface_message = {
						type = event_generic_good
						title = mpo_nerge.1031.t
						start_hunt_mystical_animal_story_cycle_effect = yes
						scope:county = {
							hunt_create_sighting_effect = {
								TYPE = legendary
								ANIMAL = flag:deer
								OWNER = root
							}
						}
					}
				}
			}
		}
		remove_variable = legendary_county
	}
}

#######################
# Hunters suggest a new tactic to catch the animals
#######################
mpo_nerge.1035 = {
	type = activity_event
	title = mpo_nerge.1035.t
	desc = mpo_nerge.1035.desc
	theme = hunt_activity
	left_portrait = {
		character = scope:hunter_1
		animation = personality_vengeful
	}
	center_portrait = {
		character = scope:hunter_2
		animation = personality_bold
	}
	right_portrait = {
		character = scope:hunter_3
		animation = personality_forgiving
	}
	cooldown = { years = 1 }
	override_background = { reference = mpo_hunt_steppe }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				is_alive = yes 
				this != root
				count >= 3
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 15
			this = involved_activity.activity_host
		}
	}

	immediate = {
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			ordered_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
				}
				order_by = martial
				save_scope_as = hunter_1
			}
			ordered_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
					this != scope:hunter_1 
				}
				order_by = diplomacy
				save_scope_as = hunter_2
			}
			ordered_attending_character = {
				limit = { 
					is_adult = yes
					is_alive = yes
					this != root
					this != scope:hunter_1 
					this != scope:hunter_2
				}
				order_by = intrigue
				save_scope_as = hunter_3
			}
		}
	}

	option = { # Martial option
		name = mpo_nerge.1035.a
		custom_tooltip = mpo_nerge.1035.a.tt
		duel = {
			skill = martial
			value = decent_skill_rating
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					always = yes
					add = scope:hunter_1.martial
				}
				min = 5
				desc = mpo_nerge.1035.tt.success
				send_interface_toast = {
					title = mpo_nerge.1035.tt.success
					type = event_toast_effect_good
					nerge_progression_large_effect = yes
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1035.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1035.tt.failure
					increase_wounds_effect = { REASON = hunting_accident }
					hidden_effect = {
						involved_activity = {
							every_attending_character = {
								limit = {
									this != root
								}
								random = {
									chance = 5 
									increase_wounds_effect = { REASON = hunting_accident }
								}
							}
						}
					}
				}
			}
		}

		scope:hunter_1 = {
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 15
			}
		}

		stress_impact = {
			brave = medium_stress_impact_loss
			craven = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = 1
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = craven
					has_trait = wounded
				}
			}
			modifier = {
				factor = 2
				highest_skill = martial
			}
		}
	}

	option = { # Diplomacy option
		name = mpo_nerge.1035.b
		custom_tooltip = mpo_nerge.1035.b.tt

		duel = {
			skill = diplomacy
			value = decent_skill_rating
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					always = yes
					add = scope:hunter_2.martial
				}
				min = 5
				desc = mpo_nerge.1035.tt.success
				send_interface_toast = {
					title = mpo_nerge.1035.tt.success
					type = event_toast_effect_good
					nerge_progression_medium_effect = yes
				}
				hidden_effect = {
					involved_activity = { 
						every_attending_character = {
							limit = {
								this != root
							}
							random = {
								chance = 25 
								if = {
									limit = {
										OR = {
											is_vassal_of = root
											is_courtier_of = root
											is_tributary_of = root
										}
										NOT = { is_obedient_to = root }
									}
									add_opinion = {
										target = root
										modifier = obedience_opinion
										years = 5
									}
									if = {
										limit = {
											root.intent_target ?= this
											root = { has_activity_intent = impose_obedience_intent }
										}
										root = { complete_activity_intent = yes }
									}
								}
								else = {
									add_opinion = {
										target = root
										modifier = respect_opinion
										opinion = 15
									}
								}
							}
						}
					}
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1035.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1035.tt.failure
					add_stress = minor_stress_gain
				}
			}
		}

		scope:hunter_2 = {
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 15
			}
		}

		stress_impact = {
			gregarious = medium_stress_impact_loss
			shy = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_sociability = 1
			}
			modifier = {
				factor = 0
				has_trait = shy
			}
			modifier = {
				factor = 2
				highest_skill = diplomacy
			}
		}
	}

	option = { # Intrigue/Learning option
		name = mpo_nerge.1035.c
		custom_tooltip = mpo_nerge.1035.c.tt

		duel = {
			skills = { intrigue learning }
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					always = yes
					add = scope:hunter_3.intrigue
				}
				min = 5
				desc = mpo_nerge.1035.tt.success
				send_interface_toast = {
					title = mpo_nerge.1035.tt.success
					type = event_toast_effect_good
					nerge_progression_small_effect = yes
					add_character_modifier = {
						modifier = mpo_nerge_investigation
						years = 3
					}
				}
			}
			50 = { 
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				min = 5
				desc = mpo_nerge.1035.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1035.tt.failure
					add_stress = minor_stress_gain
				}
			}
		}

		scope:hunter_3 = {
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 15
			}
		}

		stress_impact = {
			patient = medium_stress_impact_loss
			calm = medium_stress_impact_loss
			impatient = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
			}
			modifier = {
				factor = 2
				OR = {
					highest_skill = learning
					highest_skill = intrigue
				}
			}
			modifier = {
				factor = 0
				has_trait = impatient
			}
			modifier = {
				factor = 2
				OR = {
					has_trait = patient
					has_trait = calm
				}
			}
		}
	}

	option = { # Neutral option
		name = mpo_nerge.1035.d

		nerge_progression_tiny_effect = yes

		scope:hunter_1 = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -10
			}
		}

		scope:hunter_2 = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -10
			}
		}

		scope:hunter_3 = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -10
			}
		}

		stress_impact = {
			base = medium_stress_impact_loss
			lazy = medium_stress_impact_loss
		}

		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				has_trait = lazy
			}
		}
	}
}

#######################
# Hunter finds a bow among the bushes
#######################
mpo_nerge.1040 = {
	type = activity_event
	title = mpo_nerge.1040.t
	desc = mpo_nerge.1040.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = horse_archer_idle
		camera = camera_event_horse_left
	}
	center_portrait = {
		character = scope:hunter
		animation = hunting_shortbow_rest_arrow_default
		camera= camera_event_kneeling
	}
	artifact = {
		target = scope:newly_created_artifact
		position = lower_left_portrait
	}
	cooldown = { years = 1 }
	override_background = { reference = wilderness_activity }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				this != root
			}
			activity_host ?= root
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 5
			has_activity_intent = impose_obedience_intent
		}
		modifier = {
			add = 5
			NOT = {
				any_character_artifact = {
					artifact_slot_type = primary_armament
					is_equipped = yes 
				}
			}
		}
	}

	immediate = {
		random_dummy_gender_effect = yes
		involved_activity = { save_scope_as = activity }
		involved_activity = {
			random_attending_character = {
				limit = {
					root = { has_activity_intent = impose_obedience_intent }
					this = root.intent_target
					NOT = { is_obedient_to = root }
				}
				alternative_limit = {
					is_adult = yes
					this != root
				}
				save_scope_as = hunter
			}
		}
		scope:hunter = {
			hidden_effect_new_object = {
				create_artifact_bow_effect = {
					OWNER = scope:hunter
					CREATOR = scope:dummy_gender
					SET_BOW_TYPE = flag:no
				}
			}
		}
	}

	option = { # Leverage your Dread, it's mine by right
		name = mpo_nerge.1040.a
		trigger = { dread >= medium_dread }
		add_internal_flag = special
		scope:newly_created_artifact = { set_owner = root }
		involved_activity ?= {
			every_attending_character = {
				limit = {
					is_adult = yes
					is_ai = yes
					this != root
				}
				add_opinion = {
					target = root
					modifier = respect_opinion
					opinion = 10
				}
			}
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			greedy = major_stress_impact_loss
			avaricious = major_stress_impact_loss
			gregarious = medium_stress_impact_gain
			generous = major_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = greedy
					has_trait = avaricious
					has_trait = callous
					dread >= medium_dread
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = gregarious
				}
			}
		}
	}

	option = { # It's mine
		name = mpo_nerge.1040.b
		trigger = { dread < medium_dread }
		scope:newly_created_artifact = { set_owner = root }
		scope:hunter = {
			add_opinion = {
				target = root
				modifier = annoyed_opinion
				opinion = -15
			}
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			greedy = major_stress_impact_loss
			avaricious = major_stress_impact_loss
			gregarious = medium_stress_impact_gain
			generous = major_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = greedy
					has_trait = avaricious
					has_trait = callous
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = gregarious
				}
			}
		}
	}

	option = { # You can keep it
		name = mpo_nerge.1040.c
		custom_tooltip = mpo_nerge.1040.c.tt
		if = {
			limit = {
				has_activity_intent = impose_obedience_intent
				intent_target = scope:hunter 
			}
			random = {
				chance = 65
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1040.c.tt
					right_icon = scope:hunter
					scope:hunter = {
						add_opinion = {
							target = root
							modifier = obedience_opinion
						}
					}
					complete_activity_intent = yes
				}
			}
		}
		else = {
			scope:hunter = {
				add_opinion = {
					target = root
					modifier = grateful_opinion
					opinion = 20
				}
			}
			involved_activity = {
				every_attending_character = {
					limit = {
						is_adult = yes
						is_ai = yes
						this != root
						this != scope:hunter
					}
					add_opinion = {
						target = root
						modifier = respect_opinion
						opinion = 5
					}
				}
			}
		}
		stress_impact = {
			gregarious = medium_stress_impact_loss
			generous = major_stress_impact_loss
			callous = medium_stress_impact_gain
			greedy = major_stress_impact_gain
			avaricious = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = diligent
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = avaricious
				}
			}
		}
	}
	
	option = { # Focus on the hunt
		name = mpo_nerge.1040.d
		nerge_progression_medium_effect = yes
		hidden_effect = { destroy_artifact = scope:newly_created_artifact }
		stress_impact = {
			diligent = medium_stress_impact_loss
			greedy = medium_stress_impact_gain
			avaricious = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = diligent
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = avaricious
				}
			}
		}
	}
}

#######################
# Animal gets on the way, hunters try to get them
#######################
mpo_nerge.1050 = {
	type = activity_event
	title = mpo_nerge.1050.t
	desc = mpo_nerge.1050.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = horse_archer_idle
		camera = camera_event_horse_left
	}
	center_portrait = {
		character = scope:hunter
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:hunter_2
		animation = horse_archer_aggressive
		camera = camera_event_horse_left
	}
	cooldown = { years = 1 }
	override_background = { reference = wilderness_activity }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				this != root
				count >= 2
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 5
			involved_activity = {
				any_attending_character = {
					OR = {
						has_relation_blood_brother = root
						is_knight_of = root 
					}
				}
			}
		}
	}

	immediate = {
		involved_activity = {
			random_attending_character = {
				limit = { has_relation_blood_brother = root }
				alternative_limit = { is_knight_of = root }
				alternative_limit = {
					is_adult = yes
					this != root
				}
				save_scope_as = hunter
			}
			random_attending_character = {
				limit = {
					is_knight_of = root
					this != scope:hunter
				}
				alternative_limit = {
					is_adult = yes
					this != root
					this != scope:hunter
				}
				save_scope_as = hunter_2
			}
		}
		scope:activity = {
			random_list = {
				1 = {
					set_variable = {
						name = animal_type
						value = flag:boar
					}
				}
				1 = {
					set_variable = {
						name = animal_type
						value = flag:wolf
					}
				}
				1 = {
					set_variable = {
						name = animal_type
						value = flag:stag
					}
				}
			}
		}
		location.county = {
			set_variable = {
				name = mismanaged_animal_type
				value = scope:activity.var:animal_type
			}
		}
	}

	option = { # My brother/sister, let's get them
		name = mpo_nerge.1050.a
		trigger = {
			has_relation_blood_brother = scope:hunter
		}
		reason = blood_brother
		add_internal_flag = special
		duel = {
			skill = prowess
			value = decent_skill_rating
			65 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1050.a.tt.success
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1050.a.tt.success
					left_icon = root
					right_icon = scope:hunter
					add_prowess_skill = 1
					scope:hunter = { add_prowess_skill = 1 }
				}
			}
			35 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1050.a.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1050.a.tt.failure
					left_icon = root
					add_stress = minor_stress_gain
				}
			}
		}
		stress_impact = {
			brave = major_stress_impact_loss
			gregarious = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			craven = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = brave
					has_trait = arrogant
					has_trait = gregarious
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = lazy
					has_trait = craven
				}
			}
		}
	}

	option = { # Fight yourself
		name = mpo_nerge.1050.b
		trigger = {
			NOT = { has_relation_blood_brother = scope:hunter }
		}
		duel = {
			skill = prowess
			value = high_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1050.b.tt.success
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1050.b.tt.success
					left_icon = root
					add_prowess_skill = 1
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1050.b.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1050.b.tt.failure
					left_icon = root
					add_prestige = miniscule_prestige_loss
					add_stress = medium_stress_gain
				}
			}
		}
		stress_impact = {
			brave = major_stress_impact_loss
			arrogant = major_stress_impact_loss
			lazy = medium_stress_impact_gain
			craven = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = brave
					has_trait = arrogant
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = lazy
					has_trait = craven
				}
			}
		}
	}

	option = { # Encourage them
		name = mpo_nerge.1050.c
		scope:hunter = {
			duel = {
				skill = prowess
				value = high_skill_rating
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					min = 5
					desc = mpo_nerge.1050.c.tt.success
					send_interface_toast = {
						type = event_toast_effect_good
						title = mpo_nerge.1050.c.tt.success
						left_icon = scope:hunter
						right_icon = scope:hunter_2
						scope:hunter = { add_prowess_skill = 1 }
						scope:hunter_2 = { add_prowess_skill = 1 }
					}
				}
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					min = 5
					desc = mpo_nerge.1050.c.tt.failure
					send_interface_toast = {
						type = event_toast_effect_bad
						title = mpo_nerge.1050.c.tt.failure
						left_icon = scope:hunter
						right_icon = scope:hunter_2
						scope:hunter = {
							add_stress = medium_stress_gain
							add_opinion = {
								target = root
								modifier = annoyed_opinion
								opinion = -15
							}
						}
						scope:hunter_2 = {
							add_stress = medium_stress_gain
							add_opinion = {
								target = root
								modifier = annoyed_opinion
								opinion = -15
							}
						}
					}
				}
			}
		}
		stress_impact = {
			gregarious = major_stress_impact_loss
			lazy = major_stress_impact_loss
			craven = major_stress_impact_loss
			diligent = medium_stress_impact_gain
			brave = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = lazy
					has_trait = craven
					has_trait = gregarious
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = diligent
					has_trait = brave
				}
			}
		}
	}
	
	option = { # Don't bother
		name = mpo_nerge.1050.d
		nerge_progression_small_effect = yes
		stress_impact = {
			diligent = medium_stress_impact_loss
			brave = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = diligent
			}
			modifier = {
				factor = 0
				has_trait = brave
			}
		}
	}
}

#######################
# Delicious animals get on the way, get them
#######################
mpo_nerge.1060 = {
	type = activity_event
	title = mpo_nerge.1060.t
	desc = mpo_nerge.1060.desc
	theme = hunt_activity
	left_portrait = {
		character = root
		animation = horse_sword_shield
		camera = camera_event_horse_left
	}
	center_portrait = {
		character = scope:hunter
		animation = horse_sword_shield
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:hunter_2
		animation = horse_sword_shield
		camera = camera_event_horse_left
	}
	cooldown = { years = 1 }
	override_background = { reference = wilderness_activity }
	
	trigger = {
		has_mpo_dlc_trigger = yes
		government_has_flag = government_is_nomadic
		involved_activity ?= {
			any_attending_character = {
				is_adult = yes
				this != root
				count >= 2
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 5
			involved_activity = {
				any_attending_character = {
					has_relation_blood_brother = root
				}
			}
		}
	}

	immediate = {
		involved_activity = {
			random_attending_character = {
				limit = { has_relation_blood_brother = root }
				alternative_limit = {
					is_adult = yes
					this != root
				}
				save_scope_as = hunter
			}
			random_attending_character = {
				limit = {
					is_adult = yes
					this != root
					this != scope:hunter
				}
				save_scope_as = hunter_2
			}
		}
	}

	option = { # This is obviously a trap
		name = mpo_nerge.1060.a
		trigger = {
			has_trait = paranoid
		}
		add_character_modifier = {
			modifier = nerge_evaded_trap_modifier
			years = 10
		}
		nerge_progression_medium_effect = yes
		stress_impact = {
			paranoid = major_stress_impact_loss # You are pleased with yourself
		}
		ai_chance = {
			base = 500 # Always pick this if you're paranoid
		}
	}

	option = { # Hunt them with a sick move
		name = mpo_nerge.1060.b
		duel = {
			skill = prowess
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1060.b.tt.success
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1060.b.tt.success
					left_icon = root
					add_prestige = minor_prestige_gain
					add_prowess_skill = 1
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1060.b.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1060.b.tt.failure
					left_icon = root
					add_prestige = miniscule_prestige_loss
					add_stress = medium_stress_gain
				}
			}
		}
		stress_impact = {
			arrogant = major_stress_impact_loss
			gluttonous = major_stress_impact_gain
			comfort_eater = major_stress_impact_gain
			content = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = arrogant
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = gluttonous
					has_trait = comfort_eater
				}
			}
		}
	}

	option = { # Hunt them for meat
		name = mpo_nerge.1060.c
		duel = {
			skill = prowess
			value = high_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1060.c.tt.success
				send_interface_toast = {
					type = event_toast_effect_good
					title = mpo_nerge.1060.c.tt.success
					left_icon = root
					custom_tooltip = {
						text = mpo_nerge.1060.c.tt_feast
						set_variable = mpo_nerge_1060_free_feast
					}
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = mpo_nerge.1060.c.tt.failure
				send_interface_toast = {
					type = event_toast_effect_bad
					title = mpo_nerge.1060.c.tt.failure
					left_icon = root
					domicile ?= { change_herd = miniscule_herd_value }
				}
			}
		}
		stress_impact = {
			gluttonous = major_stress_impact_loss
			comfort_eater = major_stress_impact_loss
			diligent = medium_stress_impact_gain
			arrogant = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				OR = {
					has_trait = gluttonous
					has_trait = comfort_eater
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = diligent
					has_trait = arrogant
				}
			}
		}
	}
	
	option = { # Focus
		name = mpo_nerge.1060.d
		nerge_progression_small_effect = yes
		stress_impact = {
			diligent = medium_stress_impact_loss
			arrogant = major_stress_impact_gain
			gluttonous = major_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 2
				has_trait = diligent
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = gluttonous
					has_trait = arrogant
				}
			}
		}
	}
}
